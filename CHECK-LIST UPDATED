<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>FromStart</title><style>
/* webkit printing magic: print all background colors */
html {
	-webkit-print-color-adjust: exact;
}
* {
	box-sizing: border-box;
	-webkit-print-color-adjust: exact;
}

html,
body {
	margin: 0;
	padding: 0;
}
@media only screen {
	body {
		margin: 2em auto;
		max-width: 900px;
		color: rgb(55, 53, 47);
	}
}

body {
	line-height: 1.5;
	white-space: pre-wrap;
}

a,
a.visited {
	color: inherit;
	text-decoration: underline;
}

.pdf-relative-link-path {
	font-size: 80%;
	color: #444;
}

h1,
h2,
h3 {
	letter-spacing: -0.01em;
	line-height: 1.2;
	font-weight: 600;
	margin-bottom: 0;
}

.page-title {
	font-size: 2.5rem;
	font-weight: 700;
	margin-top: 0;
	margin-bottom: 0.75em;
}

h1 {
	font-size: 1.875rem;
	margin-top: 1.875rem;
}

h2 {
	font-size: 1.5rem;
	margin-top: 1.5rem;
}

h3 {
	font-size: 1.25rem;
	margin-top: 1.25rem;
}

.source {
	border: 1px solid #ddd;
	border-radius: 3px;
	padding: 1.5em;
	word-break: break-all;
}

.callout {
	border-radius: 3px;
	padding: 1rem;
}

figure {
	margin: 1.25em 0;
	page-break-inside: avoid;
}

figcaption {
	opacity: 0.5;
	font-size: 85%;
	margin-top: 0.5em;
}

mark {
	background-color: transparent;
}

.indented {
	padding-left: 1.5em;
}

hr {
	background: transparent;
	display: block;
	width: 100%;
	height: 1px;
	visibility: visible;
	border: none;
	border-bottom: 1px solid rgba(55, 53, 47, 0.09);
}

img {
	max-width: 100%;
}

@media only print {
	img {
		max-height: 100vh;
		object-fit: contain;
	}
}

@page {
	margin: 1in;
}

.collection-content {
	font-size: 0.875rem;
}

.column-list {
	display: flex;
	justify-content: space-between;
}

.column {
	padding: 0 1em;
}

.column:first-child {
	padding-left: 0;
}

.column:last-child {
	padding-right: 0;
}

.table_of_contents-item {
	display: block;
	font-size: 0.875rem;
	line-height: 1.3;
	padding: 0.125rem;
}

.table_of_contents-indent-1 {
	margin-left: 1.5rem;
}

.table_of_contents-indent-2 {
	margin-left: 3rem;
}

.table_of_contents-indent-3 {
	margin-left: 4.5rem;
}

.table_of_contents-link {
	text-decoration: none;
	opacity: 0.7;
	border-bottom: 1px solid rgba(55, 53, 47, 0.18);
}

table,
th,
td {
	border: 1px solid rgba(55, 53, 47, 0.09);
	border-collapse: collapse;
}

table {
	border-left: none;
	border-right: none;
}

th,
td {
	font-weight: normal;
	padding: 0.25em 0.5em;
	line-height: 1.5;
	min-height: 1.5em;
	text-align: left;
}

th {
	color: rgba(55, 53, 47, 0.6);
}

ol,
ul {
	margin: 0;
	margin-block-start: 0.6em;
	margin-block-end: 0.6em;
}

li > ol:first-child,
li > ul:first-child {
	margin-block-start: 0.6em;
}

ul > li {
	list-style: disc;
}

ul.to-do-list {
	text-indent: -1.7em;
}

ul.to-do-list > li {
	list-style: none;
}

.to-do-children-checked {
	text-decoration: line-through;
	opacity: 0.375;
}

ul.toggle > li {
	list-style: none;
}

ul {
	padding-inline-start: 1.7em;
}

ul > li {
	padding-left: 0.1em;
}

ol {
	padding-inline-start: 1.6em;
}

ol > li {
	padding-left: 0.2em;
}

.mono ol {
	padding-inline-start: 2em;
}

.mono ol > li {
	text-indent: -0.4em;
}

.toggle {
	padding-inline-start: 0em;
	list-style-type: none;
}

/* Indent toggle children */
.toggle > li > details {
	padding-left: 1.7em;
}

.toggle > li > details > summary {
	margin-left: -1.1em;
}

.selected-value {
	display: inline-block;
	padding: 0 0.5em;
	background: rgba(206, 205, 202, 0.5);
	border-radius: 3px;
	margin-right: 0.5em;
	margin-top: 0.3em;
	margin-bottom: 0.3em;
	white-space: nowrap;
}

.collection-title {
	display: inline-block;
	margin-right: 1em;
}

time {
	opacity: 0.5;
}

.icon {
	display: inline-block;
	max-width: 1.2em;
	max-height: 1.2em;
	text-decoration: none;
	vertical-align: text-bottom;
	margin-right: 0.5em;
}

img.icon {
	border-radius: 3px;
}

.user-icon {
	width: 1.5em;
	height: 1.5em;
	border-radius: 100%;
	margin-right: 0.5rem;
}

.user-icon-inner {
	font-size: 0.8em;
}

.text-icon {
	border: 1px solid #000;
	text-align: center;
}

.page-cover-image {
	display: block;
	object-fit: cover;
	width: 100%;
	height: 30vh;
}

.page-header-icon {
	font-size: 3rem;
	margin-bottom: 1rem;
}

.page-header-icon-with-cover {
	margin-top: -0.72em;
	margin-left: 0.07em;
}

.page-header-icon img {
	border-radius: 3px;
}

.link-to-page {
	margin: 1em 0;
	padding: 0;
	border: none;
	font-weight: 500;
}

p > .user {
	opacity: 0.5;
}

td > .user,
td > time {
	white-space: nowrap;
}

input[type="checkbox"] {
	transform: scale(1.5);
	margin-right: 0.6em;
	vertical-align: middle;
}

p {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}

.image {
	border: none;
	margin: 1.5em 0;
	padding: 0;
	border-radius: 0;
	text-align: center;
}

.code,
code {
	background: rgba(135, 131, 120, 0.15);
	border-radius: 3px;
	padding: 0.2em 0.4em;
	border-radius: 3px;
	font-size: 85%;
	tab-size: 2;
}

code {
	color: #eb5757;
}

.code {
	padding: 1.5em 1em;
}

.code-wrap {
	white-space: pre-wrap;
	word-break: break-all;
}

.code > code {
	background: none;
	padding: 0;
	font-size: 100%;
	color: inherit;
}

blockquote {
	font-size: 1.25em;
	margin: 1em 0;
	padding-left: 1em;
	border-left: 3px solid rgb(55, 53, 47);
}

.bookmark {
	text-decoration: none;
	max-height: 8em;
	padding: 0;
	display: flex;
	width: 100%;
	align-items: stretch;
}

.bookmark-title {
	font-size: 0.85em;
	overflow: hidden;
	text-overflow: ellipsis;
	height: 1.75em;
	white-space: nowrap;
}

.bookmark-text {
	display: flex;
	flex-direction: column;
}

.bookmark-info {
	flex: 4 1 180px;
	padding: 12px 14px 14px;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}

.bookmark-image {
	width: 33%;
	flex: 1 1 180px;
	display: block;
	position: relative;
	object-fit: cover;
	border-radius: 1px;
}

.bookmark-description {
	color: rgba(55, 53, 47, 0.6);
	font-size: 0.75em;
	overflow: hidden;
	max-height: 4.5em;
	word-break: break-word;
}

.bookmark-href {
	font-size: 0.75em;
	margin-top: 0.25em;
}

.sans { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"; }
.code { font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace; }
.serif { font-family: Lyon-Text, Georgia, YuMincho, "Yu Mincho", "Hiragino Mincho ProN", "Hiragino Mincho Pro", "Songti TC", "Songti SC", "SimSun", "Nanum Myeongjo", NanumMyeongjo, Batang, serif; }
.mono { font-family: iawriter-mono, Nitti, Menlo, Courier, monospace; }
.pdf .sans { font-family: Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK SC', 'Noto Sans CJK KR'; }

.pdf .code { font-family: Source Code Pro, "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC', 'Noto Sans Mono CJK KR'; }

.pdf .serif { font-family: PT Serif, Lyon-Text, Georgia, YuMincho, "Yu Mincho", "Hiragino Mincho ProN", "Hiragino Mincho Pro", "Songti TC", "Songti SC", "SimSun", "Nanum Myeongjo", NanumMyeongjo, Batang, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK SC', 'Noto Sans CJK KR'; }

.pdf .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC', 'Noto Sans Mono CJK KR'; }

.highlight-default {
}
.highlight-gray {
	color: rgb(155,154,151);
}
.highlight-brown {
	color: rgb(100,71,58);
}
.highlight-orange {
	color: rgb(217,115,13);
}
.highlight-yellow {
	color: rgb(223,171,1);
}
.highlight-teal {
	color: rgb(15,123,108);
}
.highlight-blue {
	color: rgb(11,110,153);
}
.highlight-purple {
	color: rgb(105,64,165);
}
.highlight-pink {
	color: rgb(173,26,114);
}
.highlight-red {
	color: rgb(224,62,62);
}
.highlight-gray_background {
	background: rgb(235,236,237);
}
.highlight-brown_background {
	background: rgb(233,229,227);
}
.highlight-orange_background {
	background: rgb(250,235,221);
}
.highlight-yellow_background {
	background: rgb(251,243,219);
}
.highlight-teal_background {
	background: rgb(221,237,234);
}
.highlight-blue_background {
	background: rgb(221,235,241);
}
.highlight-purple_background {
	background: rgb(234,228,242);
}
.highlight-pink_background {
	background: rgb(244,223,235);
}
.highlight-red_background {
	background: rgb(251,228,228);
}
.block-color-default {
	color: inherit;
	fill: inherit;
}
.block-color-gray {
	color: rgba(55, 53, 47, 0.6);
	fill: rgba(55, 53, 47, 0.6);
}
.block-color-brown {
	color: rgb(100,71,58);
	fill: rgb(100,71,58);
}
.block-color-orange {
	color: rgb(217,115,13);
	fill: rgb(217,115,13);
}
.block-color-yellow {
	color: rgb(223,171,1);
	fill: rgb(223,171,1);
}
.block-color-teal {
	color: rgb(15,123,108);
	fill: rgb(15,123,108);
}
.block-color-blue {
	color: rgb(11,110,153);
	fill: rgb(11,110,153);
}
.block-color-purple {
	color: rgb(105,64,165);
	fill: rgb(105,64,165);
}
.block-color-pink {
	color: rgb(173,26,114);
	fill: rgb(173,26,114);
}
.block-color-red {
	color: rgb(224,62,62);
	fill: rgb(224,62,62);
}
.block-color-gray_background {
	background: rgb(235,236,237);
}
.block-color-brown_background {
	background: rgb(233,229,227);
}
.block-color-orange_background {
	background: rgb(250,235,221);
}
.block-color-yellow_background {
	background: rgb(251,243,219);
}
.block-color-teal_background {
	background: rgb(221,237,234);
}
.block-color-blue_background {
	background: rgb(221,235,241);
}
.block-color-purple_background {
	background: rgb(234,228,242);
}
.block-color-pink_background {
	background: rgb(244,223,235);
}
.block-color-red_background {
	background: rgb(251,228,228);
}
.select-value-color-default { background-color: rgba(206,205,202,0.5); }
.select-value-color-gray { background-color: rgba(155,154,151, 0.4); }
.select-value-color-brown { background-color: rgba(140,46,0,0.2); }
.select-value-color-orange { background-color: rgba(245,93,0,0.2); }
.select-value-color-yellow { background-color: rgba(233,168,0,0.2); }
.select-value-color-green { background-color: rgba(0,135,107,0.2); }
.select-value-color-blue { background-color: rgba(0,120,223,0.2); }
.select-value-color-purple { background-color: rgba(103,36,222,0.2); }
.select-value-color-pink { background-color: rgba(221,0,129,0.2); }
.select-value-color-red { background-color: rgba(255,0,26,0.2); }

.checkbox {
	display: inline-flex;
	vertical-align: text-bottom;
	width: 16;
	height: 16;
	background-size: 16px;
	margin-left: 2px;
	margin-right: 5px;
}

.checkbox-on {
	background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20width%3D%2216%22%20height%3D%2216%22%20fill%3D%22%2358A9D7%22%2F%3E%0A%3Cpath%20d%3D%22M6.71429%2012.2852L14%204.9995L12.7143%203.71436L6.71429%209.71378L3.28571%206.2831L2%207.57092L6.71429%2012.2852Z%22%20fill%3D%22white%22%2F%3E%0A%3C%2Fsvg%3E");
}

.checkbox-off {
	background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%220.75%22%20y%3D%220.75%22%20width%3D%2214.5%22%20height%3D%2214.5%22%20fill%3D%22white%22%20stroke%3D%22%2336352F%22%20stroke-width%3D%221.5%22%2F%3E%0A%3C%2Fsvg%3E");
}
	
</style></head><body><article id="0387c8a2-44b7-434a-934e-3496ebda3288" class="page sans"><header><div class="page-header-icon undefined"><span class="icon">💯</span></div><h1 class="page-title">FromStart</h1></header><div class="page-body"><figure id="fa8aecbb-5c6c-4b80-8ded-bbcb74de76eb"><div class="source"><a href="https://twitter.com/fuxksniper/status/1285211285798322177">https://twitter.com/fuxksniper/status/1285211285798322177</a></div></figure><h1 id="9d276bd2-a91d-41e3-820a-f46c76c93a88" class="">Step 1</h1><h1 id="5ce8e908-8840-4a31-8671-79fb9cf28632" class=""><mark class="highlight-pink">Domain </mark></h1><p id="6673a159-906e-4db3-8479-4edb8078c9b1" class="">(cheak Company Acquistions (means cheak for the root and seed domains) also cheak if the seed domain still own by the main domain owner or not </p><p id="f97f89c6-1cd6-4e2b-a903-757a503fe9d7" class="">
</p><figure id="48af7af6-5511-4eba-b1fb-45d94e808872"><a href="https://www.crunchbase.com/" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Crunchbase: Discover innovative companies and the people behind them</div><div class="bookmark-description">Crunchbase is the leading destination for company insights from early-stage startups to the Fortune 1000. Get insights into your competition. Uncover startup trends, get company funding data. Find new prospects, beat competitors and quotas.</div></div><div class="bookmark-href"><img src="https://www.crunchbase.com/favicon.ico?v=1.0" class="icon bookmark-icon"/>https://www.crunchbase.com/</div></div><img src="https://res.cloudinary.com/crunchbase-production/image/upload/c_fit,h_256,r_max,w_256/t5jzq5uykwdw3y0ftdt0.png" class="bookmark-image"/></a></figure><p id="b9a97fd9-0c9d-4353-b5e2-7cac4964e632" class="">
</p><p id="749cc703-4664-4837-bdb8-8d86559359a7" class="">Using Bluto </p><figure id="5161e0ac-57f7-43c3-a459-8a64b8163261"><a href="https://github.com/darryllane/Bluto" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">darryllane/Bluto</div><div class="bookmark-description">DNS Recon | Brute Forcer | DNS Zone Transfer | DNS Wild Card Checks | DNS Wild Card Brute Forcer | Email Enumeration | Staff Enumeration | Compromised Account Enumeration | MetaData Harvesting Author: Darryl Lane | Twitter: @darryllane101 https://github.com/darryllane/Bluto Give us a vote: https://n0where.net/dns-analysis-tool-bluto/ Bluto has gone through a large code base change and various feature additions have been added since its first day on the job.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/darryllane/Bluto</div></div><img src="https://avatars2.githubusercontent.com/u/8728293?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="32acb394-c7d9-40d3-9963-230390627ef5" class="">bluto -d <a href="http://example.com/">example.com</a> -api 2b0ab19df982a783877a6b59b982fdba4b6c3669 -e</p><p id="89ecb15e-af54-417f-89cb-e6d56b737d77" class="">use email Hunter Api </p><p id="2e8e9fc1-293e-4132-a068-b4bd3b26d16b" class="">
</p><h1 id="2e482c50-2a41-4a6b-9e18-2bbefaa4721c" class=""><mark class="highlight-pink">Step 2</mark></h1><p id="6e5a8db9-52ec-4d81-a7d9-2f725819a779" class="">
</p><p id="6b8d3717-5e98-400e-9b3f-794cdd232905" class="">Every time you register a domain, you have to provide details about your company or
business, such as the name, phone number, mailing address, and specific email
addresses for technical and billing purposes. The domain registrar will also store the IP
address of your authoritative DNS servers.]</p><p id="9b91309f-36aa-4d3f-a5a5-66b025f37367" class="">
</p><h2 id="e7ab6bec-689e-48fc-a8d4-7eb569411409" class="">whoxyrm</h2><p id="67ca05a1-d6d4-43a2-9137-28041b0eab48" class="">
</p><figure id="9cfbbd11-66bb-4ca9-aaf1-1727cac37445"><a href="https://github.com/MilindPurswani/whoxyrm" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">MilindPurswani/whoxyrm</div><div class="bookmark-description">A reverse whois tool based on Whoxy API. Contribute to MilindPurswani/whoxyrm development by creating an account on GitHub.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/MilindPurswani/whoxyrm</div></div><img src="https://avatars2.githubusercontent.com/u/11857683?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="5f7bc081-a878-4d93-b4f9-e0e086e7a134" class="">
</p><pre id="1a01f282-82a3-4dea-a783-575bb540a529" class="code"><code>whoxyrm -company-name &quot;Oath Inc.&quot;</code></pre><p id="aad52961-a446-4fa1-aed7-d0a56adb031c" class="">
</p><p id="ffe2acf3-86c9-41a1-9084-6f6c1d0d0f49" class=""><a href="https://viewdns/">https://viewdns</a>.com</p><p id="f6ed55cf-bfb7-47be-90a2-2a0717f193e4" class="">
</p><p id="28dedcb5-93ed-41b5-b2b5-f11c19c2814b" class=""><a href="https://tools.whoisxmlapi.com/reverse-whois-search">https://tools.whoisxmlapi.com/reverse-whois-search</a></p><p id="bd92d216-3e72-46a1-827c-7b8cea016216" class="">
</p><p id="3134fa06-ed1d-44e0-bac7-99347e0b392e" class="">use These too to get Whois record and Every thing i mention below</p><p id="a7996a9b-cb8a-482e-8837-c93961c0bcde" class="">oraganization,inc</p><p id="b909a41b-f6ff-4cce-bd56-76c1e0797cd5" class="">asnnumber</p><p id="c1cf9fc4-e99a-4417-8cae-59f29272a2a6" class="">domain mail address</p><h2 id="3255f074-a47c-41be-a2a8-0cb5b320c2c3" class=""><mark class="highlight-yellow">nmap </mark></h2><pre id="d8d46128-c6b3-47b5-8518-226e931d4bb8" class="code"><code>nmap —script dns-brute —script-args dns-brute.domain=$domainnam</code></pre><h1 id="1ce0ff87-21de-4e0a-a7ef-ebe5525e8a83" class="">Metabigor?</h1><p id="bfedebee-7d18-474d-92a9-820661067a13" class="">echo &quot;company&quot; | metabigor net --org -o /tmp/result.txt</p><figure id="cf346590-2ae5-4079-8051-8edb6971b1a3"><a href="https://github.com/j3ssie/metabigor" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">j3ssie/metabigor</div><div class="bookmark-description">Intelligence Tool but without API key Metabigor is Intelligence tool, its goal is to do OSINT tasks and more but without any API key. go get -u github.com/j3ssie/metabigor Discover IP Address of the target. Wrapper for running masscan and nmap on IP target. Do searching from command line on some search engine.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/j3ssie/metabigor</div></div><img src="https://avatars1.githubusercontent.com/u/23289085?s=400&amp;v=4" class="bookmark-image"/></a></figure><blockquote id="7717f259-7961-4821-a4c1-a60fe0daa019" class="">you Can Also check For Asn Whole Subnet without Any Api Key</blockquote><h1 id="4105c9a4-0925-490b-b44a-95295c862728" class="">(Amass)</h1><p id="7b97b391-84f2-4595-a2b1-8a4490e182ac" class="">
</p><p id="033fd99c-64d0-4aef-9eb3-d5eccec40c16" class="">Read This hakluke write up on amass</p><figure id="cac15878-e5e9-40d1-8094-b900cba4af44"><a href="https://medium.com/@hakluke/haklukes-guide-to-amass-how-to-use-amass-more-effectively-for-bug-bounties-7c37570b83f7" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Hakluke&#x27;s Guide to Amass - How to Use Amass More Effectively for Bug Bounties</div><div class="bookmark-description">Amass has a lot of features. It&#x27;s a bit of a weird tool because despite being synonymous with bug bounty recon, and despite being extremely well known, most people don&#x27;t know how to use it to it&#x27;s full advantage.</div></div><div class="bookmark-href"><img src="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="icon bookmark-icon"/>https://medium.com/@hakluke/haklukes-guide-to-amass-how-to-use-amass-more-effectively-for-bug-bounties-7c37570b83f7</div></div><img src="https://miro.medium.com/max/1200/1*q64vbEOfBALwsXaMhIjbaw.png" class="bookmark-image"/></a></figure><p id="f0a09f34-507c-42e2-9ef6-fe2045e50348" class="">
</p><p id="a9695283-bc15-47de-a19c-2aaad06af272" class="">
</p><pre id="f3f7870d-a180-4766-b5ab-d2bf05bda3e8" class="code"><code>amass intel -org &lt;company name here&gt;

<mark class="highlight-orange">Mostly, it’s good for finding root domains and additional subdomains that belong to a company. It can do this in a number of ways. Firstly, there’s the “reverse whois” method.</mark></code></pre><figure id="7495f2ed-2e01-4eea-ad18-bceca242aa74" class="image"><a href="FromStart%207495f2ed2e014eeaad18bceca242aa74/2.png"><img style="width:700px" src="FromStart%207495f2ed2e014eeaad18bceca242aa74/2.png"/></a></figure><pre id="4bc5bb2d-ee77-4feb-b29d-ace00563938f" class="code"><code>amass intel -active -asn &lt;ASN Number Here&gt;

<mark class="highlight-yellow">If you want to find the ASN of a company, Amass can do a nice convenient search. For example, if I wanted to find ASN’s associated with Tesla, I could use this:</mark></code></pre><figure id="59eb8197-253c-4370-9b06-092b9da23dea" class="image"><a href="FromStart%207495f2ed2e014eeaad18bceca242aa74/2%201.png"><img style="width:700px" src="FromStart%207495f2ed2e014eeaad18bceca242aa74/2%201.png"/></a></figure><pre id="8e16f039-8f1a-4385-995a-f716ffd95684" class="code"><code>

amass intel -active -cidr &lt;CIDR Range Here&gt;



<mark class="highlight-orange">it pulls the SSL certificate from every IP address within the IP range and then spits back the domain that the SSL cert is associated with</mark></code></pre><figure id="6cd5b616-999a-4c1d-afa2-4a19771df5ca" class="image"><a href="FromStart%207495f2ed2e014eeaad18bceca242aa74/2%202.png"><img style="width:700px" src="FromStart%207495f2ed2e014eeaad18bceca242aa74/2%202.png"/></a></figure><pre id="5bb68a7c-0369-4b7d-9d0f-975a15a51f34" class="code"><code>
amass intel -whois -d &lt;Domain Name Here&gt;

<mark class="highlight-yellow">Essentially it takes the details from the specified domain’s whois records, and then tries to find other domains with similar whois records.</mark></code></pre><figure id="a34525b1-89c8-4696-8e49-2a6464ec5d43" class="image"><a href="FromStart%207495f2ed2e014eeaad18bceca242aa74/2%203.png"><img style="width:700px" src="FromStart%207495f2ed2e014eeaad18bceca242aa74/2%203.png"/></a></figure><p id="c490348f-c193-4fee-9268-8b09a89bc1f1" class="">
</p><p id="a828441b-2bdc-4fb0-80c8-b2412ca0958e" class="">Autonomous System Number (ASN) such as: IP owner, registration date, issuing registrar and the max range of the ASN with total IPs. Enter an ASn number, IP address, or a Company name or <a href="mailto:Email@company.com">Email@company.com</a> or domain inc.
</p><p id="d45536c4-7b89-4562-8533-91257bcfdc10" class="">
</p><h1 id="a5c89001-cedb-4ee6-b9c8-3ab43e071053" class=""><mark class="highlight-yellow">Step 3 </mark></h1><p id="352d9f19-401b-4ce0-9211-0bfb88b55720" class="">
</p><h2 id="b9156766-b028-44ea-8008-4ba117efaf84" class="">SUBDOMAIN ENUMARTION</h2><p id="32a058ec-e9f4-4804-8c10-766bee9361f5" class="">
</p><figure id="92a4b254-9f5a-423b-8d8e-b07f3c197dd9"><div class="source"><a href="https://twitter.com/pdnuclei/status/1289133795413811201">https://twitter.com/pdnuclei/status/1289133795413811201</a></div></figure><h3 id="1fc1bde7-b8cd-4208-8a9a-cfdfc0136894" class="">Gather Lots OF Subdomains With The Help Of Amass know YOU Can Use some More Tools To get Some more Subdomains Domains </h3><p id="704504e6-88bb-4b5d-bc3a-999c23929a9f" class="">
</p><p id="40d80f91-6a46-4faa-90bf-20b7c49ea5f5" class="">Tools</p><p id="1dabce76-d6aa-476c-98ef-6244608be3c5" class="">
</p><figure id="e2bb9cf5-0b09-4c30-8ffb-5cb3b9d659dc"><a href="https://github.com/aboul3la/Sublist3r" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">aboul3la/Sublist3r</div><div class="bookmark-description">Sublist3r is a python tool designed to enumerate subdomains of websites using OSINT. It helps penetration testers and bug hunters collect and gather subdomains for the domain they are targeting. Sublist3r enumerates subdomains using many search engines such as Google, Yahoo, Bing, Baidu and Ask.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/aboul3la/Sublist3r</div></div><img src="https://avatars2.githubusercontent.com/u/7898559?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="53fa6764-0abe-43d2-b390-79ce835c0709"><a href="https://github.com/projectdiscovery/subfinder" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">projectdiscovery/subfinder</div><div class="bookmark-description">subfinder is a subdomain discovery tool that discovers valid subdomains for websites by using passive online sources. It has a simple modular architecture and is optimized for speed. subfinder is built for doing one thing only - passive subdomain enumeration, and it does that very well.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/projectdiscovery/subfinder</div></div><img src="https://avatars1.githubusercontent.com/u/50994705?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="0af35445-1c25-4315-b8f9-c9c236da1935"><div class="source"><a href="https://chaos.projectdiscovery.io/#/">https://chaos.projectdiscovery.io/#/</a></div></figure><p id="8570a81f-ac49-4014-b8ab-868a73145ffe" class="">
</p><figure id="66cec7c2-ef31-42de-b49b-bb183ebcc72f"><a href="https://github.com/OWASP/Amass" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">OWASP/Amass</div><div class="bookmark-description">The OWASP Amass Project performs network mapping of attack surfaces and external asset discovery using open source information gathering and active reconnaissance techniques.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/OWASP/Amass</div></div><img src="https://repository-images.githubusercontent.com/140457254/1a5a3880-df66-11ea-9bd6-1ff72d6702d4" class="bookmark-image"/></a></figure><p id="7cb30723-7ae4-4870-81b0-beb46bb8d742" class="">A Fully Automatic recon Framework</p><figure id="7e500ceb-eb19-4248-a3d4-0cb241e75a60"><a href="https://github.com/j3ssie/Osmedeus" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">j3ssie/Osmedeus</div><div class="bookmark-description">Osmedeus allows you automated run the collection of awesome tools to reconnaissance and vulnerability scanning against the target. git clone https://github.com/j3ssie/Osmedeus cd Osmedeus ./install.sh This install only focus on Kali linux, check more install on Usage page.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/j3ssie/Osmedeus</div></div><img src="https://avatars1.githubusercontent.com/u/23289085?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="5a98c283-2153-4f70-bc4b-831b5eb8046a"><a href="https://github.com/codingo/Reconnoitre" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">codingo/Reconnoitre</div><div class="bookmark-description">A reconnaissance tool made for the OSCP labs to automate information gathering and service enumeration whilst creating a directory structure to store results, findings and exploits used for each host, recommended commands to execute and directory structures for storing loot and flags. Contributions are more than welcome!</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/codingo/Reconnoitre</div></div><img src="https://avatars1.githubusercontent.com/u/886344?s=400&amp;v=4" class="bookmark-image"/></a></figure><blockquote id="9ac6a325-c15e-41bd-9031-86523e149039" class=""><mark class="highlight-red">Subdomain Enumaration(subdomains found try to remove the dead once with the help of Resolveing </mark></blockquote><h3 id="293939b2-1e64-4085-b305-a7819864ec71" class=""><mark class="highlight-blue">Resolve the domain list with filter resolved or Massdns or livetargetfinder )</mark></h3><p id="80b72df7-2645-4b07-8b3e-40c73b43e842" class="">Note If YOU Have Any Other Tools Dm me I will Add Those too in the list </p><figure id="3fdc7f11-7faf-48e9-ae8b-f1ee120e5c48"><a href="https://github.com/tomnomnom/hacks/tree/master/filter-resolved" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">tomnomnom/hacks</div><div class="bookmark-description">A collection of hacks and one-off scripts. Contribute to tomnomnom/hacks development by creating an account on GitHub.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/tomnomnom/hacks/tree/master/filter-resolved</div></div><img src="https://avatars1.githubusercontent.com/u/58276?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="e3c76826-6292-447d-aedd-06acc36b44f9"><a href="https://github.com/allyomalley/LiveTargetsFinder" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">allyomalley/LiveTargetsFinder</div><div class="bookmark-description">Generates lists of live hosts and URLs for targeting, automating the usage of Massdns, Masscan and nmap to filter out unreachable hosts Given an input file of domain names, this script will automate the usage of MassDNS to filter out unresolvable hosts, and then pass the results on to Masscan to confirm that the hosts are reachable and on which ports.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/allyomalley/LiveTargetsFinder</div></div><img src="https://avatars2.githubusercontent.com/u/14209222?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="ab93fc2f-03ff-455d-b2c7-5d4bd38e300b"><a href="https://github.com/blechschmidt/massdns" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">blechschmidt/massdns</div><div class="bookmark-description">MassDNS is a simple high-performance DNS stub resolver targeting those who seek to resolve a massive amount of domain names in the order of millions or even billions. Without special configuration, MassDNS is capable of resolving over 350,000 names per second using publicly available resolvers.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/blechschmidt/massdns</div></div><img src="https://avatars0.githubusercontent.com/u/18330291?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="c56122b9-af0e-43d0-8d94-a09a749590dc" class="">
</p><figure id="01f4f81f-df00-4198-b787-a82af061ad3b"><a href="https://securitytrails.com/" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">SecurityTrails | The World&#x27;s Largest Repository of Historical DNS data</div><div class="bookmark-description">SecurityTrails enables you to explore complete current and historical data for any internet assets. IP &amp; DNS history, domain, SSL and Open Port intelligence made easy</div></div><div class="bookmark-href"><img src="https://securitytrails.com/user/themes/twentytwenty/favicon/favicon.ico" class="icon bookmark-icon"/>https://securitytrails.com/</div></div><img src="https://securitytrails.com/corp/images/social.png" class="bookmark-image"/></a></figure><h3 id="54f36b62-559c-403a-810f-335ee9d6ee0f" class=""><mark class="highlight-pink_background">Also use  gospider or Gau for finding subdomain </mark></h3><figure id="8fb4bd9d-6e7c-4782-a95c-aadc7deb7afc"><a href="https://github.com/lc/gau" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">lc/gau</div><div class="bookmark-description">getallurls (gau) fetches known URLs from AlienVault&#x27;s Open Threat Exchange, the Wayback Machine, and Common Crawl for any given domain. Inspired by Tomnomnom&#x27;s waybackurls. Examples: $ printf example.com | gau $ cat domains.txt | gau $ gau example.com To display the help for the tool use the -h flag: $ GO111MODULE=on go get -u -v github.com/lc/gau You can download the pre-built binaries from the releases page and then move them into your $PATH.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/lc/gau</div></div><img src="https://avatars1.githubusercontent.com/u/19563282?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="c81f4029-8151-4490-bb42-e339ffd40f56"><a href="https://github.com/jaeles-project/gospider" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">jaeles-project/gospider</div><div class="bookmark-description">Gospider - Fast web spider written in Go. Contribute to jaeles-project/gospider development by creating an account on GitHub.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/jaeles-project/gospider</div></div><img src="https://avatars1.githubusercontent.com/u/53511103?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="1962b9a7-a470-48a4-a712-a47bec6a83af" class="">
</p><p id="67deb6f1-0be5-415d-92df-d0d35ca388d8" class="">Then Again Run the Subdomain tools on the live One and repeat the resolve step again to resolve </p><p id="60f88bc2-7265-4498-a4b6-0427ce4a36a0" class="">
</p><pre id="160d7071-ce46-4e59-8687-fcf20fd5132c" class="code"><code><mark class="highlight-pink">Note(if you Found A 404 domain show no access to the data try to run Wayback some Time You can Get some Fruitful things 
</mark></code></pre><p id="0c5e9bcd-73d3-476b-90f7-af2b9e117810" class="">
</p><p id="d763aaab-baeb-4355-bd2d-4c90cfa5b680" class="">
</p><h1 id="dd1b56f3-344d-4b68-9106-fe2a1d671e41" class=""><mark class="highlight-red">Step 4</mark></h1><h1 id="f32fbda7-da9f-4e98-a377-db9f7a4342dc" class=""><mark class="highlight-pink"><strong>Subdomain Brute Force</strong></mark></h1><p id="71cdb792-6b84-4ed5-b64a-7a9570fd10c6" class="">Subdomain Brute Force is a Tecnique where You Can find The root Domain hidden from normal Access Using </p><figure id="41510b61-09ec-4fab-b477-ae15470eae78"><a href="https://github.com/projectdiscovery/shuffledns" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">projectdiscovery/shuffledns</div><div class="bookmark-description">shuffleDNS is a wrapper around massdns written in go that allows you to enumerate valid subdomains using active bruteforce as well as resolve subdomains with wildcard handling and easy input-output support. Based on the work on massdns project by @blechschmidt. Simple and modular code base making it easy to contribute.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/projectdiscovery/shuffledns</div></div><img src="https://avatars1.githubusercontent.com/u/50994705?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="141750bb-3f4d-428f-8929-8cd7a5283027" class="code"><code>shuffledns -d <a href="http://site.com/">http://site.com</a> -w wordlist -r resolver.txt -o output</code></pre><p id="eab24cec-627e-4f50-9f79-02b5306eff9f" class="">Run a brute force with some custom options:</p><figure id="2af05a31-940f-4119-b387-2abdc427c753"><a href="https://github.com/blark/aiodnsbrute" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">blark/aiodnsbrute</div><div class="bookmark-description">A Python 3.5+ tool that uses asyncio to brute force domain names asynchronously. It&#x27;s fast. Benchmarks on small VPS hosts put around 100k DNS resoultions at 1.5-2mins. An amazon M3 box was used to make 1 mil requests in just over 3 minutes. Your mileage may vary.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/blark/aiodnsbrute</div></div><img src="https://avatars2.githubusercontent.com/u/1313601?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="33d5540b-d7da-457e-8ccf-9eee08d8355a" class="code"><code>$ aiodnsbrute -w wordlist.txt -vv -t 1024 <a href="http://domain.com/">domain.com</a></code></pre><h2 id="f760fff0-7f55-4a28-a002-624e7fe35321" class=""><mark class="highlight-teal">Altdns</mark></h2><figure id="11977c35-9268-4b8a-ba2e-602604c69304"><a href="https://github.com/infosec-au/altdns" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">infosec-au/altdns</div><div class="bookmark-description">Altdns is a DNS recon tool that allows for the discovery of subdomains that conform to patterns. Altdns takes in words that could be present in subdomains under a domain (such as test, dev, staging) as well as takes in a list of subdomains that you know of.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/infosec-au/altdns</div></div><img src="https://avatars0.githubusercontent.com/u/5241936?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="26cf8911-37e3-48bb-a6fd-eb06550597e0" class="code"><code>echo -e &quot;######Starting Bruteforce######\n&quot;
<mark class="highlight-teal">altdns -i all.txt -o data_output -w /root/tools/Recon /recon/patterns.txt -r -s results_output.txt</mark></code></pre><h2 id="52327f09-83ec-4e0d-8006-cf3aaeb80b91" class=""><mark class="highlight-blue">Dnsgen</mark></h2><figure id="34e1a0c4-6310-43f9-983e-4fd520996b98"><a href="https://github.com/ProjectAnte/dnsgen" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">ProjectAnte/dnsgen</div><div class="bookmark-description">This tool generates a combination of domain names from the provided input. Combinations are created based on wordlist. Custom words are extracted per execution. Refer to Techniques section to learn more. dnsgen is very similar to altdns. It does not contain DNS resolver. You should use massdns for DNS resolution.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/ProjectAnte/dnsgen</div></div><img src="https://avatars1.githubusercontent.com/u/55762167?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="1e7d288c-fe38-4933-854f-1124f89d74dd" class=""><mark class="highlight-blue"> </mark>is  a good one </p><pre id="985d1a3b-82c8-4bd8-b148-8561dea76d24" class="code"><code>cat domains.txt | dnsgen - | massdns -r /path/to/resolvers.txt -t A -o J --flush 2 </code></pre><p id="b36a4d34-cf10-4193-9cbb-5a134c4468c0" class="">also use </p><h2 id="2205ca7e-831d-47ed-bd05-2369cc194703" class=""><mark class="highlight-orange">subrute </mark></h2><figure id="89e3da0d-9a2c-4373-a34d-7df163329e52"><a href="https://github.com/TheRook/subbrute" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">TheRook/subbrute</div><div class="bookmark-description">SubBrute is a community driven project with the goal of creating the fastest, and most accurate subdomain enumeration tool. Some of the magic behind SubBrute is that it uses open resolvers as a kind of proxy to circumvent DNS rate-limiting ( https://www.us-cert.gov/ncas/alerts/TA13-088A).</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/TheRook/subbrute</div></div><img src="https://avatars2.githubusercontent.com/u/521783?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="7252d813-219d-481e-9b3d-4ed376ca01ae" class="code"><code>#Fastest is Probably SubBrute.py
python $Tools/subbrute/subbrute.py paypal.com paypal.co.uk -t all.txt</code></pre><p id="851fadfa-5829-428a-b8f7-1789e5f08a43" class="">
</p><h2 id="3dbb5ffc-91f3-4c3a-82ba-2204c4091a3f" class=""><mark class="highlight-yellow">Also Go For Virtual Host Discovery </mark></h2><p id="8d07ec71-ef0e-497f-9c3f-28b91810d2aa" class="">
</p><figure id="6eeb5bf2-4fab-4c02-b929-efc9396e987e"><a href="https://blog.securitybreached.org/2017/11/04/access-localhost-via-virtual-host-virtual-host-enumeration/" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Accessing Localhost via Vhost | VIRTUAL HOST ENUMERATION</div><div class="bookmark-description">What virtual hosts (or vhosts)? A single web server can be configured to run multiple websites at once, under different domain names. These are the virtual hosts (or vhosts) and they are usually found in shared hosting environments. Why you need to Enumerate?</div></div><div class="bookmark-href"><img src="https://i2.wp.com/blog.securitybreached.org/wp-content/uploads/2019/06/cropped-logo-finalK.png?fit=192%2C192&amp;ssl=1" class="icon bookmark-icon"/>https://blog.securitybreached.org/2017/11/04/access-localhost-via-virtual-host-virtual-host-enumeration/</div></div><img src="https://blog.securitybreached.org/wp-content/uploads/2017/11/A1-1.png" class="bookmark-image"/></a></figure><h2 id="23653aed-da38-405b-a2c1-6ecd90a32658" class="">V<mark class="highlight-purple">hostdiscory </mark></h2><figure id="f0218a8a-f73d-44e6-b9f3-047702e788e0"><a href="https://github.com/jobertabma/virtual-host-discovery" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">jobertabma/virtual-host-discovery</div><div class="bookmark-description">This is a basic HTTP scanner that&#x27;ll enumerate virtual hosts on a given IP address. During recon, this might help expand the target by detecting old or deprecated code. It may also reveal hidden hosts that are statically mapped in the developer&#x27;s /etc/hosts file. The tool comes with a few basic options.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/jobertabma/virtual-host-discovery</div></div><img src="https://avatars1.githubusercontent.com/u/156693?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="d4b422a4-40d7-42cd-80c8-ea30668ab3b6"><a href="https://github.com/codingo/VHostScan" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">codingo/VHostScan</div><div class="bookmark-description">A virtual host scanner that can be used with pivot tools, detect catch-all scenarios, aliases and dynamic default pages. First presented at SecTalks BNE in September 2017 ( slidedeck).</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/codingo/VHostScan</div></div><img src="https://avatars1.githubusercontent.com/u/886344?s=400&amp;v=4" class="bookmark-image"/></a></figure><h2 id="ca8b96c4-393a-4296-bac6-19e6bbef5657" class="">FFUF</h2><p id="cc7e859c-a62d-4db4-a6e1-f395a31a2c2a" class="">
</p><pre id="17b92c80-1709-4475-9289-f2e96a7d95d6" class="code"><code>ffuf -w subdomains.txt -u <a href="http://website.com/">http://website.com/</a> -H “Host: <a href="http://fuzz.website.com/">FUZZ.website.com</a>”</code></pre><figure id="964a6fda-3e9e-43fe-add2-1520346ce5e0" class="image"><a href="FromStart%207495f2ed2e014eeaad18bceca242aa74/2%204.png"><img style="width:700px" src="FromStart%207495f2ed2e014eeaad18bceca242aa74/2%204.png"/></a></figure><h2 id="926eab23-4f46-48e5-88fd-d0f059e88087" class="">Namp</h2><pre id="17633bde-bb69-4d65-bc6a-81d49fb9b8a0" class="code"><code>nmap --script http-vhosts -p 80,8080,443 &lt;target&gt;</code></pre><h1 id="4c1449da-372d-44f8-b61d-b00bedada8c9" class=""><mark class="highlight-orange">Get (rid of) Wildcard Domains</mark></h1><figure id="68ac8ed0-50da-4578-98bd-05000fb477b2"><a href="https://github.com/thelikes/gwdomains" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">thelikes/gwdomains</div><div class="bookmark-description">Get (rid of) Wildcard Domains go get github.com/thelikes/gwdomains This tool takes a list of potential sub domains and filters out only legitimate domains. For use with tools like altdns, dnsgen, and syborg.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/thelikes/gwdomains</div></div><img src="https://avatars2.githubusercontent.com/u/54340264?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="cbfffbae-cf5e-4875-82bd-9b1fa1f5a6e6" class="">Brute force sub domains (knock,amass,fierce,subfinder,etc)
Run a mutator (dnsgen,syborg,etc)
Resolve the mutations
Feed gwdomains the mutated sub domains
Run
cat mutated.txt | gwdomains</p><h1 id="39bc65eb-d31f-4427-a4bf-df0b528b060d" class="">Note</h1><ul id="3651ce31-ed21-46a2-8b92-e02c880c2cbe" class="to-do-list"><li><div class="checkbox checkbox-off"></div> <span class="to-do-children-unchecked"><mark class="highlight-red">Then Resolve These Output subdomain with</mark></span></li></ul><pre id="c26de44d-0d84-4a10-9ec4-d5d3a7892049" class="code"><code><mark class="highlight-red"> liveTargetFinder </mark></code></pre><h1 id="4a94aa81-cfc4-4994-b8d7-86fa94f68675" class=""><mark class="highlight-red">Step 5</mark></h1><h2 id="64b72459-0a04-4bda-872c-dd633f378e65" class=""><mark class="highlight-pink">Fingerprint</mark></h2><h1 id="3e8bb98d-8e13-46ff-a85c-4eb784144531" class=""><mark class="highlight-yellow">Cms </mark></h1><figure id="5f36afae-a8ed-422c-acab-1ccdd2a05071"><div class="source"><a href="https://whatcms.org/">https://whatcms.org/</a></div></figure><h2 id="17b6ecf3-1e31-40ed-a1d8-e5ff8635f311" class="">Identify the Cms  then use the Scanner)FOR Wordpress Site use <code>WPScan</code>|for <code>drupal joomla scanner</code></h2><figure id="c02e2599-f1df-4a04-89a4-2970972b03da"><a href="https://github.com/Dionach/CMSmap" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Dionach/CMSmap</div><div class="bookmark-description">CMSmap is a python open source CMS scanner that automates the process of detecting security flaws of the most popular CMSs. The main purpose of CMSmap is to integrate common vulnerabilities for different types of CMSs in a single tool. At the moment, CMSs supported by CMSmap are WordPress, Joomla, Drupal and Moodle.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/Dionach/CMSmap</div></div><img src="https://avatars2.githubusercontent.com/u/6841218?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="52371ae2-49bf-4681-ad4f-0f8d82ad0bba"><a href="https://github.com/wpscanteam/wpscan" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">wpscanteam/wpscan</div><div class="bookmark-description">WordPress Security Scanner Homepage - WPScan.io - Vulnerability Database - WordPress Security Plugin (Optional but highly recommended: RVM) Ruby &gt;= 2.3 - Recommended: latest Ruby 2.5.0 to 2.5.3 can cause an &#x27;undefined symbol: rmpd_util_str_to_d&#x27; error in some systems, see #1283 Curl &gt;= 7.21 - Recommended: latest RubyGems - Recommended: latest Nokogiri might require packages to be installed via your package manager depending on your OS, see https://nokogiri.org/tutorials/installing_nokogiri.html When using a pentesting distubution (such as Kali Linux), it is recommended to install/update wpscan via the package manager if available.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/wpscanteam/wpscan</div></div><img src="https://avatars3.githubusercontent.com/u/1872249?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="f820c9aa-e7f7-4214-a4c5-e0496484890b"><a href="https://github.com/rezasp/joomscan" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">rezasp/joomscan</div><div class="bookmark-description">OWASP Joomla! Vulnerability Scanner (JoomScan) is an open source project, developed with the aim of automating the task of vulnerability detection and reliability assurance in Joomla CMS deployments. Implemented in Perl, this tool enables seamless and effortless scanning of Joomla installations, while leaving a minimal footprint with its lightweight and modular architecture.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/rezasp/joomscan</div></div><img src="https://avatars0.githubusercontent.com/u/12808790?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="f64ea5b5-ddf4-437b-ba05-64dc0f5b497f"><a href="https://github.com/thomashartm/burp-aem-scanner" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">thomashartm/burp-aem-scanner</div><div class="bookmark-description">Burp AEM Security Scanner is an AEM focussed plugin which supports the evaluation of well known misconfigurations of AEM installations. It supports the verification of a number of Adobe&#x27;s security checklist topics and evaluates typical AEM and Dispatcher misconfigurations. AEM is an enterprise grade content management system used by a variety of high profile companies.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/thomashartm/burp-aem-scanner</div></div><img src="https://avatars3.githubusercontent.com/u/3109217?s=400&amp;v=4" class="bookmark-image"/></a></figure><h2 id="2adfeb42-9d82-41fc-8426-65fd7174fae9" class="">Use Nikto for every fingerprinting subdomain You Have in Your Found List </h2><p id="a7c36965-e83f-4ed4-99bd-e6840b73a8fa" class="">Nikto  </p><pre id="e6b6a3d3-a168-4adc-816b-bb4f6de538c6" class="code"><code>nikto -h &lt;ip&gt; or &lt;domainname&gt; -ssl (ssl enable website)</code></pre><h2 id="e9627557-88b4-4eb7-aefe-b5ec2ea25891" class="">WafW00f It Detect Which Firewall is the Website using  </h2><pre id="84b82dbd-3051-494a-b76c-ebeeccca659c" class="code"><code>wafw00f &lt;domainname&gt;
</code></pre><p id="0d448ca7-da1b-488a-a682-9e08928a2340" class="">web application firewalls</p><figure id="724b70dc-86d1-4fae-bbc5-657971287fcd"><a href="https://github.com/EnableSecurity/wafw00f" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">EnableSecurity/wafw00f</div><div class="bookmark-description">The Web Application Firewall Fingerprinting Tool. - From Enable Security To do its magic, WAFW00F does the following: Sends a normal HTTP request and analyses the response; this identifies a number of WAF solutions. If that is not successful, it sends a number of (potentially malicious) HTTP requests and uses simple logic to deduce which WAF it is.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/EnableSecurity/wafw00f</div></div><img src="https://avatars2.githubusercontent.com/u/13013552?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="8b8777fd-b5e6-4666-9b20-e0ef91472df3" class="">
</p><p id="b8d9f9c5-eb6e-4b43-be81-73e73d7deabe" class="">NMAP</p><pre id="f8759b73-c480-442b-93ac-aa189f6dab05" class="code"><code>You can Also Use Nmap for Detecting WAF

 nmap -p 80,443 --script=http-waf-detect &lt;domainname&gt;</code></pre><h2 id="01b67cff-ee61-42fa-9810-d711aff03a20" class="">| <mark class="highlight-orange">whatweb</mark> </h2><p id="b7e73c96-9d41-476a-b4fb-ef8ac5a8b662" class="">WhatWeb identifies websites. Its goal is to answer the question, &quot;What is that Website?&quot;. WhatWeb recognises web technologies including content management systems (CMS), blogging platforms, statistic/analytics packages, JavaScript libraries, web servers, and embedded devices. WhatWeb has over 1800 plugins, each to recognise something different. WhatWeb also identifies version numbers, email addresses, account IDs, web framework modules, SQL errors, and more.</p><figure id="2569505e-7edb-4d63-a8dd-9d5f1949fa19"><a href="https://github.com/urbanadventurer/WhatWeb" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">urbanadventurer/WhatWeb</div><div class="bookmark-description">Next generation web scanner. Contribute to urbanadventurer/WhatWeb development by creating an account on GitHub.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/urbanadventurer/WhatWeb</div></div><img src="https://avatars0.githubusercontent.com/u/101783?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="ec2ff594-1b68-4452-96f0-3aa2b032388d" class="code"><code>whatweb &lt;domainname&gt;</code></pre><h2 id="9d6470de-776f-41ae-bee4-5b4d46dd3c92" class=""><mark class="highlight-yellow">Builthwith </mark></h2><h3 id="734846b0-3e23-4488-8788-1f2c3301d723" class="">Chrome Extention</h3><p id="c914ec15-4a2b-454b-9951-65a7a764a088" class=""><a href="https://builtwith.com/">https://builtwith.com/</a></p><p id="9589a138-99d2-4d77-b6a1-20006eaeda2a" class="">Identify The Tecnology Of the Website </p><h3 id="fa80259d-a62b-4576-8332-3014613032b3" class=""><mark class="highlight-pink">Wapplayzer </mark></h3><p id="5834c64a-6f4f-496f-bbd0-d17c0aeeb222" class="">Chrome Extention it Also Identify The Tecnology </p><p id="f6409d68-5741-4c10-b4ab-36299ccf8f2f" class="">Once You Identify the tecnology </p><h3 id="28e038c0-2f48-4cb9-827b-b829240a8db9" class=""> <mark class="highlight-red">Cname </mark></h3><p id="ea34519b-3e2c-4728-84b6-c6a9bd348281" class="">Identify The Cname of Every subdomain for the takeover (also look for nameserver domain | and Mailserver domain) takeover</p><p id="1058c952-5365-46b8-8e70-33a248fba5ba" class="">
</p><p id="8003b1f7-f223-4589-a854-661c6c817493" class="">
</p><p id="28ab61c0-78a6-42f0-b045-44ecfa2c7f1d" class="">
</p><h1 id="0b6b1bf9-beb9-4808-aff6-99fa1aa681c8" class=""><code><mark class="highlight-red">Step 6</mark></code></h1><p id="c96733f3-97c6-4b48-b421-ca8090c16860" class="">
</p><h3 id="408dcab1-9bb7-46c9-8135-77c910a5ee29" class=""><mark class="highlight-blue">Crawling </mark></h3><p id="71986262-166a-4bbc-b10c-00b695ee4757" class="">Tip: Never forget to look for hidden parameters in the source code. click view source code and search for “hidden”, “input”, or “var” parameters.</p><p id="0a323383-3d19-49ed-8b57-8f0f0381dea7" class="">(Basic Crawling  a website is typically one of the first places to start once you have discovered the live endpoints. It basically involves recursively visiting and saving each link on a website)</p><blockquote id="9bb4585c-0e92-4d0b-b191-7310df9fe628" class=""><em><strong><mark class="highlight-blue">Scan The List of Live URL you found Above in step 3 $ 4</mark></strong></em></blockquote><p id="719b5e81-ee01-4f67-b5a8-e77ae8ac4fd3" class="">During Crawling You Will Found Alots of Endponts use Gf Tomnomnom and search for differnt parameters </p><figure id="f850cfbe-f4a3-419d-a330-d63097089010"><a href="https://t.co/ODoSQlRrBd?amp=1" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">1ndianl33t/Bug-Bounty-Roadmaps</div><div class="bookmark-description">The Bug Hunter&#x27;s Methodology v4 Roadmap SSRF Techniques Roadmap Web Penetration Tester Roadmap Mobile Penetration Tester Roadmap Server_Side_Template injection Roadmap More Roadmaps You can encourage me to contribute more to the open source with donations. 8085778875</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://t.co/ODoSQlRrBd?amp=1</div></div><img src="https://avatars2.githubusercontent.com/u/16093307?s=400&amp;v=4" class="bookmark-image"/></a></figure><h3 id="7d631cf7-fb50-4795-af70-70e8fd299de6" class=""> ( Linked And Js Discovery &quot;End Points | Looking For JS File And search For    keys password and config Files&quot;
Grep Endpoint from Js File  cheak the status of the JavaScript files using hakcheckurl |use JS Beautifier for reading the js file)</h3><h3 id="9b6a591d-7f8e-4a1c-82f5-0cb61a295a4c" class=""><mark class="highlight-yellow">Gospider </mark></h3><figure id="4ebace4e-0c15-4e20-a559-725373350a9b"><a href="https://github.com/jaeles-project/gospider" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">jaeles-project/gospider</div><div class="bookmark-description">Gospider - Fast web spider written in Go. Contribute to jaeles-project/gospider development by creating an account on GitHub.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/jaeles-project/gospider</div></div><img src="https://avatars1.githubusercontent.com/u/53511103?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="cc92f727-d706-40ef-97b9-9799b130bef7" class="code"><code><mark class="highlight-purple">gospider -s &quot;</mark><mark class="highlight-purple"><a href="https://google.com/">https://google.com/</a></mark><mark class="highlight-purple">&quot; -o output -c 10 -d 1
gospider -S sites.txt -o output -c 10 -d 1</mark></code></pre><h3 id="616f445a-8999-4bcb-8214-4ad8f2665805" class=""><mark class="highlight-red">Gau</mark></h3><figure id="4a51f0c9-1315-47ed-9683-f74c90a4abd6"><a href="https://github.com/lc/gau.git" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">lc/gau</div><div class="bookmark-description">getallurls (gau) fetches known URLs from AlienVault&#x27;s Open Threat Exchange, the Wayback Machine, and Common Crawl for any given domain. Inspired by Tomnomnom&#x27;s waybackurls. Examples: $ printf example.com | gau $ cat domains.txt | gau $ gau example.com To display the help for the tool use the -h flag: $ GO111MODULE=on go get -u -v github.com/lc/gau You can download the pre-built binaries from the releases page and then move them into your $PATH.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/lc/gau.git</div></div><img src="https://avatars1.githubusercontent.com/u/19563282?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="b4acae03-1378-4388-8553-a60a5c772eb7" class="code"><code>gau <a href="http://example.com/">example.com</a></code></pre><p id="c05bb54e-4559-4e8c-adda-4a5b7dcc986d" class="">
</p><figure id="c9ff6dcc-3f12-4bf5-8cdd-0c03a7bff9dc"><a href="https://github.com/KathanP19/JSFScan.sh" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">KathanP19/JSFScan.sh</div><div class="bookmark-description">Contribute to KathanP19/JSFScan.sh development by creating an account on GitHub.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/KathanP19/JSFScan.sh</div></div><img src="https://avatars3.githubusercontent.com/u/33719912?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="26081eee-13f6-498b-8340-9efbdb6dd960" class="">
</p><p id="ca3cae61-58ab-4c24-8434-40c467f96c64" class="">
</p><h3 id="1e52d965-2bd1-4f85-b7d2-717cdb13f898" class="">Secreat Finder</h3><figure id="9871d3ce-1432-48bc-be98-32eb03740ebb"><a href="https://github.com/m4ll0k/SecretFinder" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">m4ll0k/SecretFinder</div><div class="bookmark-description">SecretFinder - A python script for find sensitive data (apikeys, accesstoken,jwt,..) and search anything on javascript files - m4ll0k/SecretFinder</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/m4ll0k/SecretFinder</div></div><img src="https://avatars1.githubusercontent.com/u/25008734?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="68adaf8d-e0d8-4f8a-b22a-b2e25c0cad22" class="">
</p><h3 id="c8d09adb-2faf-4d17-a7f2-c8f97fabf739" class="">Subdominzer</h3><h1 id="0db5e460-743c-48bb-8460-fd027cc15577" class=""><mark class="highlight-orange">Step 7</mark></h1><h2 id="c8c03bdc-318e-4ec3-bafa-3a81ba7e7c18" class="">Screen Shot</h2><h1 id="feb73037-e419-4f9a-8292-024d6d4826a4" class=""><mark class="highlight-yellow"> Eyewitness</mark></h1><p id="a0a08932-aaef-4495-9ed2-53a06d602bd7" class="">EyeWitness is designed to take screenshots of websites provide some server header info, and identify default credentials if known.</p><figure id="377e65cd-4a88-43c3-a112-9e5c0c1b41c9"><a href="https://github.com/FortyNorthSecurity/EyeWitness" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">FortyNorthSecurity/EyeWitness</div><div class="bookmark-description">EyeWitness is designed to take screenshots of websites provide some server header info, and identify default credentials if known. EyeWitness is designed to run on Kali Linux. It will auto detect the file you give it with the -f flag as either being a text file with URLs on each new line, nmap xml output, or nessus xml output.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/FortyNorthSecurity/EyeWitness</div></div><img src="https://avatars1.githubusercontent.com/u/39602924?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="a52d41ae-651b-4068-897d-005bb68221ec" class="code"><code>./EyeWitness -f urls.txt --web

./EyeWitness -x urls.xml --timeout 8 

./EyeWitness.py -f urls.txt --web --proxy-ip 127.0.0.1 --proxy-port 8080 --proxy-type socks5 --timeout 120</code></pre><p id="c2aaa330-483f-4cf2-a395-85d5dfe6217a" class="">
</p><h3 id="414d5173-c38f-4b43-a5e8-34625eeabe55" class=""><mark class="highlight-orange"> Aquatone</mark></h3><figure id="359686bc-ad24-4120-88d6-276df181479e" class="equation"><style>@import url('https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.11.1/katex.min.css')</style><div class="equation-container"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>a</mi><mi>t</mi><mi>h</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>x</mi><mi>t</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>t</mi><mi>o</mi><mi>n</mi><mi>e</mi><mo>−</mo><mi>o</mi><mi>u</mi><mi>t</mi><mtext> </mtext><mi mathvariant="normal">/</mi><mi>a</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>t</mi><mi>o</mi><mi>n</mi><mi>e</mi><mi mathvariant="normal">/</mi><mi>e</mi><mi>x</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>c</mi><mi>o</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">cat hosts.txt | aquatone -out ~/aquatone/example.com</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault">t</span><span class="mord mathdefault">x</span><span class="mord mathdefault">t</span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">u</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mspace nobreak"> </span><span class="mord">/</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">u</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord">/</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord">.</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span></span></span></span></span></div></figure><figure id="d643466c-5fe1-4af6-a743-e574206bbd04"><a href="https://github.com/michenriksen/aquatone" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">michenriksen/aquatone</div><div class="bookmark-description">A Tool for Domain Flyovers. Contribute to michenriksen/aquatone development by creating an account on GitHub.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/michenriksen/aquatone</div></div><img src="https://repository-images.githubusercontent.com/46488106/7e6e6e80-68d5-11e9-8eb6-76a42f87cc0f" class="bookmark-image"/></a></figure><p id="28d419dd-e7ae-4a37-9dcf-e64491ec8e90" class="">
</p><p id="a59a541f-82ca-4cf0-8a58-3dbac2deca5e" class="">
</p><h1 id="be6dc701-bb74-4673-942a-25cce3453043" class=""><mark class="highlight-yellow">Step 8</mark></h1><p id="e55d0689-a95a-4f6a-8f8d-6bce45b2552a" class="">
</p><p id="a5fbc9ce-0a76-46c7-8324-a2d2720e8aaa" class="">
</p><h3 id="2df38c50-ead0-45d3-aa91-4b5ea4f35c9e" class=""><mark class="highlight-pink">Github Recon</mark></h3><h3 id="f7beb0d7-455b-4005-a0c5-bfad11be7495" class=""><mark class="highlight-orange">Tools</mark></h3><figure id="201ef1cb-1f08-4512-9ed8-d645cc4f23d4"><a href="https://github.com/tillson/git-hound" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">tillson/git-hound</div><div class="bookmark-description">A batch-catching, pattern-matching, patch-attacking secret snatcher. GitHound pinpoints exposed API keys and other sensitive information across all of GitHub using pattern matching, commit history searching, and a unique result scoring system. GitHound has earned me over $7500 applied to Bug Bounty research. Corporate and Bug Bounty Hunter use cases are outlined below.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/tillson/git-hound</div></div><img src="https://avatars0.githubusercontent.com/u/5000248?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="5932d840-eaf3-4b30-b345-c5bc2bc9b296"><a href="https://github.com/hisxo/gitGraber" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">hisxo/gitGraber</div><div class="bookmark-description">gitGraber is a tool developed in Python3 to monitor GitHub to search and find sensitive data in real time for different online services such as: Google, Amazon (AWS), Paypal, Github, Mailgun, Facebook, Twitter, Heroku, Stripe, Twilio... It&#x27;s important to understand that gitGraber is not designed to check history of repositories, many tools can already do that great.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/hisxo/gitGraber</div></div><img src="https://avatars1.githubusercontent.com/u/16657045?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="5bc27507-7afb-485f-9284-ae316bda089e" class="">
</p><figure id="2a26acd0-7e93-433c-b714-1a3323807fad"><a href="https://github.com/michenriksen/gitrob" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">michenriksen/gitrob</div><div class="bookmark-description">Gitrob is a tool to help find potentially sensitive files pushed to public repositories on Github. Gitrob will clone repositories belonging to a user or organization down to a configurable depth and iterate through the commit history and flag files that match signatures for potentially sensitive files.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/michenriksen/gitrob</div></div><img src="https://repository-images.githubusercontent.com/28916646/3521cb80-7007-11e9-8391-97cc0108d430" class="bookmark-image"/></a></figure><p id="d5d9595f-5f22-4c69-8f18-fda9474536f7" class="">Use </p><figure id="3d781267-17a9-4559-8bc6-b66920bef5da"><a href="https://gist.github.com/jhaddix/1fb7ab2409ab579178d2a79959909b33" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">shhhhhhh</div><div class="bookmark-description">You can&#x27;t perform that action at this time. You signed in with another tab or window. You signed out in another tab or window. Reload to refresh your session. Reload to refresh your session.</div></div><div class="bookmark-href"><img src="https://gist.github.com/favicon.ico" class="icon bookmark-icon"/>https://gist.github.com/jhaddix/1fb7ab2409ab579178d2a79959909b33</div></div><img src="https://github.githubassets.com/images/modules/gists/gist-og-image.png" class="bookmark-image"/></a></figure><p id="7dddbc9b-16c6-46d8-8846-ed920b3c6fdb" class="">
</p><h2 id="0a30fede-3d52-417c-a16a-a26160576d75" class=""><mark class="highlight-teal">Manual</mark></h2><figure id="b3948a5f-35fc-4dd0-bb0e-0f305d9ae9cb"><a href="https://medium.com/@ghostlulzhacks/github-osint-1e8a96f9fdb8" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Github OSINT</div><div class="bookmark-description">Before we get started I have started a slack group dedicated to hacking. We welcome everyone from beginner to advanced to join. I will be on everyday answer questions, doing CTFs, and talking about cool hacks.</div></div><div class="bookmark-href"><img src="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="icon bookmark-icon"/>https://medium.com/@ghostlulzhacks/github-osint-1e8a96f9fdb8</div></div><img src="https://miro.medium.com/max/598/1*i2EWMmpsSAowvJMoEEsZmw.png" class="bookmark-image"/></a></figure><pre id="2166c271-fa9c-463b-8144-8a1bba1747a4" class="code"><code>filename:sftp-config.json password.
filename:.env MAIL_HOST=smtp.gmail.com
filename:.npmrc _auth
filename:.dockercfg auth
extension:pem private
extension:ppk private
filename:id_rsa or filename:id_dsa
extension:sql mysql dump
extension:sql mysql dump password
filename:credentials aws_access_key_id
filename:.s3cfg
filename:wp-config.php
filename:.htpasswd
filename:.env DB_USERNAME NOT homestead
filename:.env MAIL_HOST=smtp.gmail.com
filename:.git-credentials
*&quot;target(.)com&quot; password
*&quot;target(.)com&quot; &quot;pass&quot; &#x27;email&#x27;
*&quot;target(.)com&quot; &quot;api&quot;
*&quot;target(.)com&quot; FTP
*&quot;target(.)com&quot; SMTP
*&quot;target(.)com&quot; LDAP
*&quot;target(.)com&quot; PEM (For Keys)
&quot;<a href="http://hackerb0y.com/">http://hackerb0y.com</a>&quot; &quot;password&quot;
&quot;<a href="http://hackerb0y.com/">http://hackerb0y.com</a>&quot; &quot;database&quot;
&quot;<a href="http://hackerb0y.com/">http://hackerb0y.com</a>&quot; &quot;secret&quot;
&quot;<a href="http://hackerb0y.com/">http://hackerb0y.com</a>&quot; &quot;api_key&quot;
&quot;site . com&quot; ssh language:yaml
Got config.yaml</code></pre><p id="c232bbb1-4122-46b6-9fdf-1da7f3dde740" class="">
</p><p id="bccc021c-e79d-455c-859e-879becde2532" class="">If You found Any Git file return 404 try this tool </p><figure id="dd03731c-00a2-4ec3-870c-7fb732467b46"><a href="https://t.co/FzXHh15Fco?amp=1" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">lijiejie/GitHack</div><div class="bookmark-description">GitHack is a .git folder disclosure exploit. It rebuild source code from .git folder while keep directory structure unchanged. GitHack是一个.git泄露利用脚本，通过泄露的.git文件夹下的文件，重建还原工程源代码。 渗透测试人员、攻击者，可以进一步审计代码，挖掘：文件上传，SQL注射等web安全漏洞。 解析.git/index文件，找到工程中所有的： ( 文件名，文件sha1 ) 去.git/objects/ 文件夹下下载对应的文件 zlib解压文件，按原始的目录结构写入源代码 GitHack.py http://www.openssl.org/.git/ Thanks for sbp&#x27;s great work, I used his .git index parser gin - a Git index file parser.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://t.co/FzXHh15Fco?amp=1</div></div><img src="https://avatars3.githubusercontent.com/u/3167953?s=400&amp;v=4" class="bookmark-image"/></a></figure><h2 id="6bd53782-0b2a-4dfc-aad9-5ced7ea8385e" class="">
Google Dorks</h2><p id="b28a3ea9-dc27-4af3-82d1-d17891ff5265" class="">
</p><p id="dac53072-6344-410f-a8d1-9164e6fb54a3" class=""><mark class="highlight-yellow">site:</mark><mark class="highlight-yellow"><a href="http://ideone.com/">http://ideone.com</a></mark><mark class="highlight-yellow"> | site:</mark><mark class="highlight-yellow"><a href="http://codebeautify.org/">http://codebeautify.org</a></mark><mark class="highlight-yellow"> | site:</mark><mark class="highlight-yellow"><a href="http://codeshare.io/">http://codeshare.io</a></mark><mark class="highlight-yellow"> | site:</mark><mark class="highlight-yellow"><a href="http://codepen.io/">http://codepen.io</a></mark><mark class="highlight-yellow"> | site:</mark><mark class="highlight-yellow"><a href="http://repl.it/">http://repl.it</a></mark><mark class="highlight-yellow"> | site:</mark><mark class="highlight-yellow"><a href="http://justpaste.it/">http://justpaste.it</a></mark><mark class="highlight-yellow"> | site:</mark><mark class="highlight-yellow"><a href="http://pastebin.com/">http://pastebin.com</a></mark><mark class="highlight-yellow"> | site:</mark><mark class="highlight-yellow"><a href="http://jsfiddle.net/">http://jsfiddle.net</a></mark><mark class="highlight-yellow"> | site:</mark><mark class="highlight-yellow"><a href="http://trello.com/">http://trello.com</a></mark><mark class="highlight-yellow"> &quot;</mark><mark class="highlight-yellow"><a href="http://alibaba.com/">alibaba.com</a></mark></p><h3 id="a3725bee-e0a4-4685-a0ec-752b50118dcc" class="">Google Dork for API hacking You can always find updated dork list from <a href="https://github.com/mrnitesh/WSDL/blob/master/dork.txt">https://github.com/mrnitesh/WSDL/blob/master/dork.txt</a></h3><p id="006bb100-964f-4074-8b90-2a14859a782d" class="">
</p><figure id="c0c878d6-c966-47d6-bf93-3993dc465083" class="image"><a href="FromStart%207495f2ed2e014eeaad18bceca242aa74/Untitled.png"><img style="width:340px" src="FromStart%207495f2ed2e014eeaad18bceca242aa74/Untitled.png"/></a></figure><figure id="8c6680fa-50e9-4875-8e18-cbfc3a667444" class="image"><a href="FromStart%207495f2ed2e014eeaad18bceca242aa74/Untitled%201.png"><img style="width:340px" src="FromStart%207495f2ed2e014eeaad18bceca242aa74/Untitled%201.png"/></a></figure><figure id="97ed653c-6840-4d76-93d4-47b0940b41c7" class="image"><a href="FromStart%207495f2ed2e014eeaad18bceca242aa74/Untitled%202.png"><img style="width:340px" src="FromStart%207495f2ed2e014eeaad18bceca242aa74/Untitled%202.png"/></a></figure><figure id="dd232cff-63d5-43ab-bfe5-da56d21a32ac" class="image"><a href="FromStart%207495f2ed2e014eeaad18bceca242aa74/Untitled%203.png"><img style="width:340px" src="FromStart%207495f2ed2e014eeaad18bceca242aa74/Untitled%203.png"/></a></figure><figure id="bada53e0-1094-4013-b495-051876b92b32" class="image"><a href="FromStart%207495f2ed2e014eeaad18bceca242aa74/Untitled%204.png"><img style="width:340px" src="FromStart%207495f2ed2e014eeaad18bceca242aa74/Untitled%204.png"/></a></figure><p id="a7bfb922-7edc-484c-9013-5212ab27da49" class="">
</p><p id="5caeeb8a-19bb-4056-88e8-437fd81a020a" class="">Dork:</p><pre id="cf59c9f3-2f03-4300-93a1-04b480ef0c64" class="code"><code>
&quot;Url&quot; filename:automation password passwd pass</code></pre><pre id="19e87a3d-93da-4eaf-ace2-2ddd37c9c4ce" class="code"><code>intitle:&quot;index of&quot; &quot;ssh.yml&quot;
intitle:&quot;index of&quot; &quot;database-old.yml&quot;
intitle:&quot;index of&quot; &quot;configuration.yml&quot;
intitle:&quot;index of&quot; &quot;database.yml&quot;
intitle:&quot;index of&quot; &quot;ftp.yml&quot;

Another Dork
&quot;target . com&quot; sshpass
Remove space :)
Note: Target must have oarge scope. Good chances to get juicy information
Best URL:
<a href="https://t.co/CGePSfMcvK?amp=1">https://google.com/search?q=how+to:+your%20question+here…</a></code></pre><p id="14bef93e-7a3b-4faf-9e6a-b41934331c84" class="">
</p><h1 id="9e03f2be-6c00-453a-854c-eb4d4bbb9ef5" class=""><mark class="highlight-orange">Step 9</mark></h1><h3 id="a1be1ed7-fb7d-4576-8f6c-c090073a6ea2" class=""><mark class="highlight-red">Go For Subdomain Takeover </mark></h3><p id="efecd97c-4636-4695-bc9b-97d1b3cc8360" class="">
</p><figure id="23a7bc7f-23f9-445b-b2c5-7c8902499063"><a href="https://www.hackerone.com/blog/Guide-Subdomain-Takeovers" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">A Guide To Subdomain Takeovers</div><div class="bookmark-description">HackerOne&#x27;s Hacktivity feed - a curated feed of publicly-disclosed reports - has seen its fair share of subdomain takeover reports. Since Detectify&#x27;s fantastic series on subdomain takeovers, the bug bounty industry has seen a rapid influx of reports concerning this type of issue.</div></div><div class="bookmark-href"><img src="https://www.hackerone.com/sites/default/files/favicon_0.ico" class="icon bookmark-icon"/>https://www.hackerone.com/blog/Guide-Subdomain-Takeovers</div></div><img src="https://www.hackerone.com/sites/default/files/frogs-find-bugs.png" class="bookmark-image"/></a></figure><h2 id="81591264-54c4-4c16-b850-e9fa44c89bab" class="">DNSPROBE</h2><figure id="6fb6a230-d50a-4c02-ba02-968bcce9e0a8"><a href="https://github.com/projectdiscovery/dnsprobe" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">projectdiscovery/dnsprobe</div><div class="bookmark-description">DNSProbe is a tool built on top of retryabledns that allows you to perform multiple dns queries of your choice with a list of user supplied resolvers. Simple and Handy utility to query DNS records. This will display help for the tool. Here are all the switches it supports.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/projectdiscovery/dnsprobe</div></div><img src="https://avatars1.githubusercontent.com/u/50994705?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="9e01435e-bc19-41ea-8076-4fc40368cff8" class="">Take The List Of Subdomains And Check For The Cname with dnsprobe</p><pre id="b9d7e82c-3c10-40c8-914f-5d77971857fd" class="code"><code>dnsprobe -r cname Mx NS  </code></pre><p id="dcdd53e6-0696-4b93-bb49-542c44cb80c0" class="">
</p><p id="710978a7-5fec-49a7-81f5-133c51b56b53" class="">
</p><h2 id="44ea97de-6192-458c-bd56-8ab0534e4d53" class="">Get A List of Subdomain YOu Found In the Step 3 and Run some Subdomain takeover tools Againts the list of subdomains </h2><p id="1544470f-fd0a-4086-851e-8a9bd52fe6e3" class="">
</p><figure id="df5e0403-58e2-4e84-8941-08a9e248c681"><a href="https://github.com/haccer/subjack" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">haccer/subjack</div><div class="bookmark-description">Subjack is a Subdomain Takeover tool written in Go designed to scan a list of subdomains concurrently and identify ones that are able to be hijacked. With Go&#x27;s speed and efficiency, this tool really stands out when it comes to mass-testing. Always double check the results manually to rule out false positives.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/haccer/subjack</div></div><img src="https://avatars1.githubusercontent.com/u/22013186?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="9adce8e5-44db-44d0-826a-4b93e7a8aef4" class="">
</p><p id="31afefed-1ca6-4749-b2e4-48fd2d9cabf6" class="">Also Go For NameServer Domain | Mail Server domain </p><figure id="93428001-1b3a-4d06-ada9-b91ffd8d03c9"><a href="https://github.com/mandatoryprogrammer/TrustTrees" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">mandatoryprogrammer/TrustTrees</div><div class="bookmark-description">TrustTrees is a script to recursively follow all the possible delegation paths for a target domain and graph the relationships between various nameservers along the way. TrustTrees also allows you to view where errors occurred in this chain such as DNS REFUSED, NXDOMAIN, and other errors.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/mandatoryprogrammer/TrustTrees</div></div><img src="https://avatars2.githubusercontent.com/u/5349141?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="07d9e076-f653-4ee3-b90b-989d4b615241" class="">
</p><p id="bd1b5b1c-4039-4ac3-abcb-e402ad9bb31e" class=""><a href="https://digi.ninja/files/bucket_finder_1.1.tar.bz2">https://digi.ninja/files/bucket_finder_1.1.tar.bz2</a></p><p id="926c0e61-587e-43c6-99e1-7b3b59e22771" class="">echo &quot;[+] S3 Bucket Scanner [+]&quot;</p><figure id="b1a3fdc8-fd05-4906-affd-c178f3e9ca4f"><a href="https://github.com/sa7mon/S3Scanner" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">sa7mon/S3Scanner</div><div class="bookmark-description">A tool to find open S3 buckets and dump their contents 💧 usage: s3scanner [-h] [-o OUTFILE] [-d] [-l] [--version] buckets # s3scanner - Find S3 buckets and dump!</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/sa7mon/S3Scanner</div></div><img src="https://avatars2.githubusercontent.com/u/3712226?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="30f356ed-b339-4193-964e-2430a2c0452c" class="">echo &quot;[+] TKO-SUBS for Subdomain TKO [+]&quot;</p><figure id="bc148b32-c794-4899-975b-8786aad7f067"><a href="https://github.com/anshumanbh/tko-subs" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">anshumanbh/tko-subs</div><div class="bookmark-description">This tool allows: To check whether a subdomain can be taken over because it has: a dangling CNAME pointing to a CMS provider (Heroku, Github, Shopify, Amazon S3, Amazon CloudFront, etc.) that can be taken over.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/anshumanbh/tko-subs</div></div><img src="https://avatars0.githubusercontent.com/u/9063340?s=400&amp;v=4" class="bookmark-image"/></a></figure><h2 id="513e9f8f-3b38-4ccf-a72f-72160ff239d5" class="">Nuclei </h2><p id="5cf5ebe2-47dd-4f5e-88a3-06c3f4256258" class="">
</p><p id="5189613e-7ae9-49d1-af9c-7223a72f6aae" class="">TAKEOVER TEMPALTE</p><figure id="e7a4ccfa-02b1-468b-9213-26c8943874df"><a href="https://github.com/projectdiscovery/nuclei" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">projectdiscovery/nuclei</div><div class="bookmark-description">Nuclei is a fast tool for configurable targeted scanning based on templates offering massive extensibility and ease of use. Nuclei is used to send requests across targets based on a template leading to zero false positives and providing effective scanning for known paths.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/projectdiscovery/nuclei</div></div><img src="https://avatars1.githubusercontent.com/u/50994705?s=400&amp;v=4" class="bookmark-image"/></a></figure><h2 id="169bd69c-1efc-41b8-964e-8eab2fc86a35" class="">Subover</h2><p id="974ef8d6-fffe-47c6-bfa0-0693adc77067" class="">
</p><figure id="ecb8805e-be8a-4d40-ade3-8900a11c8282"><a href="https://github.com/Ice3man543/SubOver" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Ice3man543/SubOver</div><div class="bookmark-description">But something more awesome will come soon! Subover is a Hostile Subdomain Takeover tool originally written in python but rewritten from scratch in Golang. Since it&#x27;s redesign, it has been aimed with speed and efficiency in mind. Till date, SubOver detects 30+ services which is much more than any other tool out there.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/Ice3man543/SubOver</div></div><img src="https://avatars0.githubusercontent.com/u/22318055?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="c6cb1ecb-3904-421d-be12-4c5ab4655a01" class="">
</p><h1 id="76feb0b9-018e-4806-aa3b-d4ea50516400" class=""><mark class="highlight-blue">Step </mark>10</h1><p id="9c359435-1cad-4cd3-87bc-777350818f6a" class="">
</p><p id="349e3d91-7acb-48ae-bc72-d57ac81b6772" class="">Nuclei  NEW CVE(use Nuclei)</p><figure id="00f994ef-9a6e-4b0b-b1ec-146a49205ec5"><a href="https://github.com/projectdiscovery/nuclei" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">projectdiscovery/nuclei</div><div class="bookmark-description">Nuclei is a fast tool for configurable targeted scanning based on templates offering massive extensibility and ease of use. Nuclei is used to send requests across targets based on a template leading to zero false positives and providing effective scanning for known paths.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/projectdiscovery/nuclei</div></div><img src="https://avatars1.githubusercontent.com/u/50994705?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="228c8415-1972-4a45-ac38-805a5ba2e1ab" class="">Run This Tools Templates Against the Websites Found during Recon </p><p id="27e2488a-e097-4bf4-b345-098ebd234cc8" class="">
</p><h1 id="0df3cb3a-d3cf-49d1-9520-94e70dee90f3" class=""><mark class="highlight-pink">Step 11</mark></h1><h1 id="8a80725f-2e8a-4aae-a2ad-6296624a2c57" class="">Directory Brute Force Wordlist</h1><p id="79d7a64f-b1b1-4ed6-a112-491190d1d9fd" class="">Try to Use A Good Word List  or Use | <mark class="highlight-yellow">Raftsmall | jhadix all.txt | RobotsDisallowed1000.txt</mark></p><figure id="6bd69930-a04f-438e-8602-23a7f8f2687a"><a href="https://github.com/danielmiessler/SecLists/tree/master/Discovery/DNS" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">danielmiessler/SecLists</div><div class="bookmark-description">SecLists is the security tester&#x27;s companion. It&#x27;s a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more. - danielmiessler/SecLists</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/danielmiessler/SecLists/tree/master/Discovery/DNS</div></div><img src="https://avatars3.githubusercontent.com/u/50654?s=400&amp;v=4" class="bookmark-image"/></a></figure><h2 id="784f063e-f4df-4ab4-9e0d-a36bec483b82" class="">Directory Brute Forceing using </h2><p id="deb25ac5-2402-4379-be25-776fcb372d05" class="">dirsearch</p><figure id="9ca7a14f-8dd5-4248-a470-c9ab744d6385"><a href="https://github.com/maurosoria/dirsearch" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">maurosoria/dirsearch</div><div class="bookmark-description">Current Release: v0.3.9 (2019.11.26) dirsearch is a simple command line tool designed to brute force directories and files in websites.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/maurosoria/dirsearch</div></div><img src="https://avatars0.githubusercontent.com/u/1757675?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="badba55e-5552-4236-bafa-52602d18609d" class="code"><code>python3 <a href="http://dirsearch.py/">dirsearch.py</a> -e conf,config,bak,backup,swp,old,db,sql,asp,aspx,aspx~,asp~,py,py~,rb,rb~,php,php~,bak,bkp,cache,cgi,conf,csv,html,inc,jar,js,json,jsp,jsp~,lock,log,rar,old,sql,sql.gz,<a href="http://sql.zip/">http://sql.zip</a>,sql.tar.gz,sql~,swp,swp~,tar,tar.bz2,tar.gz,txt,wadl,zip,.log,.xml,.js.,.json -u <a href="https://coderedmarketing.eccouncil.org/">https://coderedmarketing.eccouncil.org/</a> -t 100 -w /root/tools/bruteforce/ffufplus/wordlist/dicc.txt -b</code></pre><p id="b7c9a65f-41ca-480d-8235-69025bc94615" class="">
</p><h2 id="9ae10537-bab6-41b0-88be-c5bd6afa46f1" class="">FFUF</h2><p id="782514f1-426b-4ca2-988b-efba6ffffd06" class="">Use Ffuf plus For directory Brute Force With Defult Word List </p><figure id="5d6ca594-71e7-4605-b5a6-1d09cda9edfd"><a href="https://github.com/ffuf/ffuf" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">ffuf/ffuf</div><div class="bookmark-description">A fast web fuzzer written in Go. Download a prebuilt binary from releases page, unpack and run! or If you have go compiler installed: go get github.com/ffuf/ffuf The only dependency of ffuf is Go 1.11. No dependencies outside of Go standard library are needed.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/ffuf/ffuf</div></div><img src="https://avatars1.githubusercontent.com/u/42502069?s=400&amp;v=4" class="bookmark-image"/></a></figure><h1 id="be8034e1-f423-4cdd-8c61-53f26b028863" class=""><code>(also brute force login page maintarget and there others page too )</code></h1><figure id="5b1b6f47-92b8-4369-8115-bf904b1c47b9"><a href="https://github.com/dark-warlord14/ffufplus" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">dark-warlord14/ffufplus</div><div class="bookmark-description">You can read the writeup on this script here Dismiss GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together. Sign up Permalink Failed to load latest commit information. ffufplus - ffuf on Steroids bash install.sh To run the tool, just use the following command.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/dark-warlord14/ffufplus</div></div><img src="https://avatars0.githubusercontent.com/u/25666147?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="8f3ac213-1bc4-43cf-b262-31e488dad1ee" class="">
</p><p id="284e1197-d5fa-46dc-a4dc-c63f240df470" class="">WFUZZ</p><figure id="aee511e4-4972-45b6-a08b-1dc3db0ed9a9"><a href="https://github.com/xmendez/wfuzz" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">xmendez/wfuzz</div><div class="bookmark-description">Wfuzz has been created to facilitate the task in web applications assessments and it is based on a simple concept: it replaces any reference to the FUZZ keyword by the value of a given payload. A payload in Wfuzz is a source of data.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/xmendez/wfuzz</div></div><img src="https://avatars2.githubusercontent.com/u/789349?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="9e92b919-4ad4-4133-a705-f6211f873d16" class="">
</p><h1 id="629fd292-7e38-45fe-9fca-37769ed63c5c" class=""><mark class="highlight-red">STEP 12</mark></h1><p id="fecb19a2-4ea5-4760-9402-fe039d72aded" class="">
</p><h1 id="7d769da1-074a-43e2-8dbd-12d6c7342446" class=""><mark class="highlight-pink">ParaMeter Discovery </mark></h1><p id="7f1064cf-62a3-4b7e-9a75-a8d27860517c" class="">
</p><p id="f5f4536c-4376-4ab1-936e-20ef4045dc55" class=""> Arjun </p><pre id="ceeaf92a-128e-49d0-8fe8-201d715d1530" class="code"><code>python3 <a href="http://arjun.py/">arjun.py</a> -u <a href="https://api.example.com/endpoint">https://api.example.com/endpoint</a> --get</code></pre><figure id="ab520796-a990-4558-859b-35ae8769a99f"><a href="https://github.com/s0md3v/Arjun/wiki/Usage#scanning-a-single-url" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">s0md3v/Arjun</div><div class="bookmark-description">To find GET parameters, you can simply do: python3 arjun.py -u https://api.example.com/endpoint --get Similarly, use --post for POST and --json to look for JSON parameters. A list of URLs stored in a file can be test by using the --urls option as follows python3 arjun.py --urls targets.txt --get Arjun uses 2 threads by default but you can tune its performance according to your network connection and target allowance.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/s0md3v/Arjun/wiki/Usage#scanning-a-single-url</div></div><img src="https://avatars2.githubusercontent.com/u/26716802?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="696638c3-b95b-4948-b7a8-0251a53334c3" class="">
</p><p id="0a7a0b01-06e5-4004-b24d-931df3265280" class="">Ffuf</p><p id="5e167757-61fc-420e-b137-9d0b2f8107e8" class="">Use Ffuf Plus For Parameter Finding </p><p id="332f8016-6dd3-49c0-9225-9f573374b17f" class=""><mark class="highlight-yellow">Defualt option </mark></p><figure id="19baf92d-9714-4fd2-b804-2b563501761b"><a href="https://github.com/dark-warlord14/ffufplus" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">dark-warlord14/ffufplus</div><div class="bookmark-description">You can read the writeup on this script here Dismiss GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together. Sign up Permalink Failed to load latest commit information. ffufplus - ffuf on Steroids bash install.sh To run the tool, just use the following command.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/dark-warlord14/ffufplus</div></div><img src="https://avatars0.githubusercontent.com/u/25666147?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="a7f25d54-60f0-4058-b156-5c45cbdfeec8" class="">
</p><h2 id="2ea2eac8-0458-4692-85fb-3eecb5ab50ad" class=""> PARAMSPIDER</h2><figure id="3e04badb-2608-4288-9d23-ca720b9faa01"><a href="https://github.com/devanshbatham/ParamSpider" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">devanshbatham/ParamSpider</div><div class="bookmark-description">Finds parameters from web archives of the entered domain. Finds parameters from subdomains as well. Gives support to exclude urls with specific extensions. Saves the output result in a nice and clean manner.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/devanshbatham/ParamSpider</div></div><img src="https://avatars2.githubusercontent.com/u/28016517?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="00dfa00d-e8e2-4090-a093-813a2969f078" class="code"><code>python3 <a href="http://paramspider.py/">paramspider.py</a> --domain <a href="http://bugcrowd.com/">bugcrowd.com</a> --exclude woff,css,js,png,svg,php,jpg --output bugcrowd.txt</code></pre><p id="b47733d5-245a-4480-ad4e-6b56a0e6d1c3" class="">
</p><blockquote id="fb5c32d4-16b6-4967-8016-7ebd7ff18445" class="">we Have Also Collected some end points During the Perivous Step also combine Both of them and go for the hunt </blockquote><p id="e654f4d5-e5c1-453a-8c1a-96945cc13d72" class=""><strong><code>For Finding Hidden parameter And endpoints</code></strong></p><p id="3b447537-1ea3-4f80-b32f-280efed201a5" class="">
</p><h1 id="556666a6-0a25-4e76-be4d-75d985d52f44" class=""><mark class="highlight-yellow">STEP 13</mark></h1><p id="a14660e5-76bd-44b5-afa6-cad3439e5c77" class="">
</p><h1 id="49769e73-ab9a-4fde-8544-8eb79657df15" class=""><mark class="highlight-pink">Port Scan </mark></h1><figure id="29153da6-5724-40a8-a19a-8917269de6b3"><a href="https://github.com/projectdiscovery/naabu" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">projectdiscovery/naabu</div><div class="bookmark-description">naabu is a port scanning tool written in Go that allows you to enumerate valid ports for hosts in a fast and reliable manner. It is a really simple tool that does fast SYN scans on the host/list of hosts and lists all ports that return a reply.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/projectdiscovery/naabu</div></div><img src="https://avatars1.githubusercontent.com/u/50994705?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="e7c0d299-c7d6-4833-b7ba-80c5f974115f"><a href="https://hub.docker.com/r/koutto/jok3r/" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Docker Hub</div></div><div class="bookmark-href"><img src="https://hub.docker.com/favicon.ico" class="icon bookmark-icon"/>https://hub.docker.com/r/koutto/jok3r/</div></div></a></figure><figure id="97d3626b-8779-445f-9d64-5548647f407b"><a href="https://github.com/vesche/scanless" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">vesche/scanless</div><div class="bookmark-description">online port scan scraper. Contribute to vesche/scanless development by creating an account on GitHub.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/vesche/scanless</div></div><img src="https://avatars2.githubusercontent.com/u/8083281?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="39e84a86-d77b-435f-bdae-629179e9502f" class="code"><code>sudo nmap -sS -T4 -sC -oA myreportname — stylesheet <a href="https://raw.githubusercontent.com/honze-net/nmap-bootstrap-xsl/master/nmap-bootstrap.xsl">https://raw.githubusercontent.com/honze-net/nmap-bootstrap-xsl/master/nmap-bootstrap.xsl</a> -iL subdomain.txt
nmap –script smtp-enum-users.nse
nmap -vv -p0- -sSUV -O -oA

Nmap -sV -sC -v -T4 --script http-shellshock -p 443,80 &lt;target&gt;
nmap -vv -p0- -sSUV -O -oA $outputfile $targe
nmap -sV --script &quot;discovery, vuln, not (brute or dos)&quot; --script-timeout 30m --host-timeout 35m -T4 &lt;TARGETGOESHERE&gt; -oA &lt;OUTPUTFILENAMEHERE&gt;</code></pre><p id="a7d21124-8003-41d7-8d6c-f70f26527697" class="">This Script Will Automate All YOUR PORT SCANNING</p><p id="56174a7a-bb1f-420d-80ba-02484e795b09" class="">Using Nmap or Massscan </p><figure id="1f9f9cca-f3f0-4903-9284-f5a91f3a2c4c"><a href="https://github.com/KathanP19/portscan.sh" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">KathanP19/portscan.sh</div><div class="bookmark-description">All in one port scanning script. Contribute to KathanP19/portscan.sh development by creating an account on GitHub.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/KathanP19/portscan.sh</div></div><img src="https://avatars3.githubusercontent.com/u/33719912?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="9565047f-f4b7-4414-a203-eea280097e22" class="">
</p><blockquote id="8f648dff-29dc-4c80-aef5-3ba360fd7453" class=""><mark class="highlight-pink">Pass The Result To Brutespray for bruteforceing SSH services,FTP SMTP AND some Others</mark></blockquote><h2 id="e0772929-458e-4cbc-be82-3c62779b106a" class=""> Brutespray</h2><figure id="5928a413-92ab-473a-9c39-e5362110560e"><a href="https://github.com/x90skysn3k/brutespray" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">x90skysn3k/brutespray</div><div class="bookmark-description">Created by: Shane Young/@x90skysn3k &amp;&amp; Jacob Robles/@shellfail Inspired by: Leon Johnson/@sho-luv Credit to Medusa: JoMo-Kun / Foofus Networks - http://www.foofus.net https://youtu.be/C-CVLbSEe_g BruteSpray takes nmap GNMAP/XML output or newline seperated JSONS and automatically brute-forces services with default credentials using Medusa. BruteSpray can even find non-standard ports by using the -sV inside Nmap.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/x90skysn3k/brutespray</div></div><img src="https://avatars3.githubusercontent.com/u/22178125?s=400&amp;v=4" class="bookmark-image"/></a></figure><pre id="ec68a3fc-e5e4-4c44-b1e0-4c51ef068e89" class="code"><code>python <a href="http://brutespray.py/">brutespray.py</a> --file nmap.gnmap</code></pre><p id="919a2cef-de9d-425a-b38e-f71f73a1133e" class="">
</p><p id="17b74eaa-1391-4e96-ae13-9843beb09830" class="">
</p><h1 id="825a6c69-e5ba-43ad-a1e7-a2e8130ebbf1" class=""><mark class="highlight-pink">TOP 10 OWASP VULNERBILTIES</mark></h1><p id="9638fd83-ba60-4436-bd41-9ccf372e2f4d" class="">
</p><h1 id="0d10bfe0-a1c1-4826-b35b-e8e9c037e13c" class=""><mark class="highlight-yellow">Crawling</mark></h1><p id="7ac546f7-7d76-4d0f-a969-07d78bc5c4fe" class="">
</p><p id="e3120fe0-4843-4533-a6c0-4375b673c815" class="">Use This Scanner and cheak for owasp vulnerbilties</p><figure id="c68f81a9-9203-4173-a8da-1d600d3535d1"><a href="https://github.com/pikpikcu/xrcross" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">pikpikcu/XRCross</div><div class="bookmark-description">Details XRCross is a Reconstruction, Scanner, and a tool for penetration / BugBounty testing.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/pikpikcu/xrcross</div></div><img src="https://avatars2.githubusercontent.com/u/60111811?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="71d31a8a-2965-4d74-971c-95b97859425e" class="">
</p><p id="8eb06a3b-fe43-4af7-aadc-2e2839b86366" class="">Tips</p><pre id="a6aebc16-19ee-4bfb-840e-8945fb3c0c70" class="code"><code>if a site uses
1 <strong><mark class="highlight-pink">AngularJS,
</mark></strong> test {{7*7}} to see whether 49 is rendered anywhere.
If the application is built with <a href="http://asp.net/">ASP.NET</a> with XSS protection
enabled, you might want to focus on testing other vulnerability
types first and check for XSS as a last resort.
If a site is built with 
<mark class="highlight-yellow">2 Rails,
</mark> you might know that URLs
typically follow a /CONTENT_TYPE/RECORD_ID pattern, where the
RECORD_ID is an autoincremented integer. Using HackerOne as
an example, report URLs follow the pattern
<a href="http://www.hackerone.com/reports/12345">www.hackerone.com/reports/12345</a>. Rails applications
commonly use integer IDs, so you might prioritize testing
insecure direct object reference vulnerabilities because this
vulnerability type is easy for developers to overlook.
If an API returns 
3 :<em><mark class="highlight-purple"><strong>JSON or XML
</strong></mark></em>, you might recognize that
those API calls unintentionally return sensitive information
that isn’t rendered on the page. Those calls might be a good
testing surface and could lead to information disclosure
vulnerabilities.
Here are some factors to keep in mind at this stage:
Content formats a site expects or accepts For example,
XML files come in different shapes and sizes, and XML
parsing can always be associated with XXE vulnerabilities.
<mark class="highlight-pink">Keep an eye out for sites that accept .docx, .xlsx, .pptx, or
other XML file types.</mark>
Third-party tools or services that are easily
misconfigured Whenever you read reports about hackers
exploiting such services, try to understand how those
reporters discovered the vulnerability and apply that
process to your testing.
Encoded parameters and how an application handles
them Oddities might be indicative of multiple services
interacting in the backend, which could be abused.
Custom implemented authentication mechanisms, such
as OAuth flows Subtle differences in how an application
handles redirect URLs, encoding, and state parameters
might lead to significant vulnerabilities.</code></pre><p id="4d704cdd-d239-4439-a903-5e81462619c1" class="">
</p><p id="440b4bf7-b1f4-43f8-8116-6eca4aa9a0be" class="">
</p><p id="959bcfe5-0845-403b-ba6a-91379c381083" class="">
</p><p id="7db18bbe-6916-484b-9537-e8f6fe36469d" class="">Use This To Find Some Cool Stuff</p><figure id="b774222a-33fe-48b0-89a6-10a498ed477d"><a href="https://github.com/ethicalhackingplayground/Zin" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">ethicalhackingplayground/Zin</div><div class="bookmark-description">A Payload Injector for bugbounties written in go. Contribute to ethicalhackingplayground/Zin development by creating an account on GitHub.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/ethicalhackingplayground/Zin</div></div><img src="https://avatars1.githubusercontent.com/u/33673319?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="836e477e-df7d-4a47-9e59-17d7df497f87" class="">
</p><p id="6b90a4a8-6d4a-48b9-809c-78098701d8f2" class="">Google Dorks (also use for ssrf xss information disclosure and buckets misconfigration)
</p><p id="9fa217d1-2669-4760-88f2-ef6e6a70b7ce" class="">
</p><h3 id="b878033e-22a8-40a7-b07f-87371cc3fc1b" class="block-color-pink_background">Spf Record</h3><figure id="766f94f7-9b4b-4fcd-b552-c2224ce2070f"><a href="https://hackerone.com/reports/629087" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Chainlink disclosed on HackerOne: No Valid SPF Records.</div><div class="bookmark-description">Hiii, There is any issue No valid SPF Records Desciprition : There is a email spoofing vulnerability.Email spoofing is the forgery of an email header so that the message appears to have originated from someone or somewhere other than the actual source.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/629087</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/031/577/b030438885463162b42f2f9a61ceaa3df786d9ae_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h3 id="87838e88-e4a5-4a2a-b198-e42a0910ae1e" class="">
<mark class="highlight-orange">Cors Misconfigration (gf cors,corsme scanner)</mark></h3><p id="2260d94b-46a3-4a83-93d0-8b91aa3a4786" class="">One Liners  For Cors</p><pre id="8441bfda-2b9e-414b-970b-eddb504afdf1" class="code"><code>cors_reflect_auto(){
        gau $1 | while read url;do target=$(curl -s -I -H &quot;Origin: https://evil.com&quot; -X GET $url) | if grep &#x27;https://evil.com&#x27;; then [Potentional CORS Found]echo $url;$url;else echo Nothing on &quot;$url&quot;;fi;done
}
cors_null_origin(){
        gau $1 | while read url;do target=$(curl -s -I -H &quot;Origin: null&quot; -X GET $url) | if grep &#x27;Access-Control-Allow-Origin: null&#x27;; then echo [Potentional CORS Found] &quot;$url&quot;; else echo Nothing on: &quot;$url&quot;;fi;done

}
cors_null_value(){
        gau $1 | while read url;do target=$(curl -s -I -X GET &quot;$url&quot;) | if grep &#x27;Access-Control-Allow-Origin: null&#x27;; then echo [Potentional CORS Found] &quot;$url&quot;; else echo Nothing on: &quot;$url&quot;;fi;done
}
cors_trust_subdomain(){
        gau $1 | while read url;do target=$(curl -s -I -H &quot;Origin: evil.$url&quot; -X GET &quot;$url&quot;) | if grep &#x27;Access-Control-Allow-Origin: null&#x27;; then echo [Potentional CORS Found] &quot;$url&quot;; else echo Nothing on: &quot;$url&quot;;fi;done
}
cors_domain_not_valid(){
        gau $1 | while read url;do target=$(curl -s -I -H &quot;Origin: https://not$site&quot; -X GET &quot;$url&quot;) | if grep &#x27;Access-Control-Allow-Origin: https://not$site&#x27;; then echo [Potentional CORS Found] &quot;$url&quot;; else echo Nothing on: &quot;$url&quot;;fi;done
}
cors_dom_ext(){
        gau $1 | while read url;do target=$(curl -s -I -H &quot;Origin: $site.evil.com&quot; -X GET &quot;$url&quot;) | if grep &quot;Origin: Access-Control-Allow-Origin: $site.evil.com&quot;;  then echo [Potentional CORS Found] &quot;$url&quot;; else echo Nothing on: &quot;$url&quot;;fi;done
}</code></pre><figure id="6c45a0b8-1f9d-4925-a56b-7e8a871a65b2"><a href="https://github.com/Shivangx01b/CorsMe" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Shivangx01b/CorsMe</div><div class="bookmark-description">A cors misconfiguration scanner tool based on golang with speed and precision in mind ! Reflect Origin checks Prefix Match Suffix Match Not Esacped Dots Null ThirdParties (Like =&gt; github.io, repl.it etc.) SpecialChars (Like =&gt; &quot;}&quot;,&quot;(&quot;, etc.) $ go get -u github.com/shivangx01b/CorsMe Single Url echo &quot;https://example.com&quot; | ./CorsMe Multiple Url cat http_https.txt | ./CorsMe -t 70 Allow wildcard ..</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/Shivangx01b/CorsMe</div></div><img src="https://avatars1.githubusercontent.com/u/46749216?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="005013f3-5179-432f-827c-882432fda0f0" class="">
<mark class="highlight-purple">Email Header Injection on Reset Password Function</mark></p><figure id="4922ddd7-2e05-4b2c-9bff-36e94f0c7488"><a href="https://hackerone.com/reports/281575" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Mavenlink disclosed on HackerOne: Password reset link injection...</div><div class="bookmark-description">@cablej found a vulnerability in our password reset functionality that allowed an attacker using an HTTP request with a modified `Host` header to cause a password reset link to be emailed to the target user that would navigate to the attacker&#x27;s domain.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/281575</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/048/f0b795a31dcd39219030322524224cd0b61cc45e_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h3 id="e37bdb40-20d5-4376-a821-9e120cedfdc0" class="">
<mark class="highlight-blue">SMTP Injection And Host Header Injection</mark></h3><figure id="8af7b1c7-6c6d-467d-9a22-a9c62fbfc9f4"><a href="https://hackerone.com/reports/183548" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">LocalTapiola disclosed on HackerOne: SMTP configuration...</div><div class="bookmark-description">Issue The reporter found a few misconfigurations in one smtp-server related to the viestinta.lahitapiola.fi domain. ##Fix Some configuration changes were made to the smtp-service. ##Reasoning The issues reported were investigated thoroughly. The service has underlying controls which make misuses in the way the dreport describes almost impossible.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/183548</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/008/416/b6fbd7e94497b0ffaee584d2e7096c5d5e2082e2_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="b0adb824-eaf7-4390-b2bb-8dd435f00af6"><a href="https://hackerone.com/reports/698416" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">New Relic disclosed on HackerOne: Host Header Injection</div><div class="bookmark-description">Reproduction 1- open reset link https://login.newrelic.com/passwords/forgot 2- Enter the victim&#x27;s email address and click Reset and Email Password 3- Intercept the HTTP request in Burp Suite &amp; add X-Forwarded Host Header and write attacker.com/.newrelic.com link will be like...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/698416</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="7d99ce4b-35e0-473f-bcc5-70ace26ef718"><a href="https://hackerone.com/reports/182670" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Boozt Fashion AB disclosed on HackerOne: Email link poisoning /...</div><div class="bookmark-description">Description ------------- It is possible to poison the link of the password reset email. This is generally done by altering the [Host header](http://www.skeletonscribe.net/2013/05/practical-http-host-header-attacks.html), but in this case, the WAF is successfully blocking it. The trick here is to add an **X-Forwarded-Host** header in the request so the server is using this value instead of the...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/182670</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/001/453/17d9f47114907532c0e0433b43eb1e01e426043e_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h2 id="5353386c-b76b-4282-b721-3a3234d6fa8c" class="">
<mark class="highlight-teal">IFrame ClickJacking</mark></h2><p id="6647d55c-4a80-4ff0-bc24-dd6b2523a4d8" class="">
</p><figure id="045d68e5-50bf-4c46-bd20-86d2225bc4f4"><a href="https://hackerone.com/reports/283951" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Gratipay disclosed on HackerOne: Bypassing X-frame options</div><div class="bookmark-description">bypass X-Frame-Options ( Proxy protection NOT used ) DomainUsing: gratipay.com Proxy protection NOT used , i can bypass X-Frame-Options header and recreate clickjacking on the whole domain. I see that you don&#x27;t have a reverse proxy protection this allows all users to proxy your website rather than iframe it.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/283951</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/001/868/a75c6649c5b4671b3cf44160af884a7da9fd0b67_original.jpg/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="4e3e6aa6-d10c-4851-bc5c-3cb993f67ff4" class="">
</p><figure id="fc838632-4db2-454e-a5f6-ca3360d6d352"><a href="https://hackerone.com/reports/371980" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">OLX disclosed on HackerOne: Bypass CSP frame-ancestors at...</div><div class="bookmark-description">Hi, [olx.co.za](https://www.olx.co.za/) and [olx.com.gh](https://www.olx.com.gh/) both of them restrict framing by using this CSP rule: ``` content-security-policy: frame-ancestors &#x27;self&#x27; https://*.mod-tools.com:* ``` olx.co.za: {F313178} olx.com.gh: {F313179} If we take a look at `mod-tools.com` we can see that the domain is not claimed: ``` $ dig mod-tools.com ; &gt; DiG...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/371980</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/008/146/07ffc7e779ee301e61da60eda7f2bd862a7082ca_original.jpg/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h2 id="168aa949-9dbd-42fc-b165-94ac5fa98ac1" class="">
<mark class="highlight-blue">Improper Access Control </mark></h2><figure id="1c60e80c-21e9-4f1a-b397-1d826b56ede6"><a href="https://hackerone.com/reports/317332" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Vend VDP disclosed on HackerOne: Improper access control on adding...</div><div class="bookmark-description">Summary:** User without permissions to add a Register to an Outlet can bypass this restriction and add a Register to an Outlet. **Description:** I do not know which permission exactly controls this action, I tested this against default `Cashier` role. User with default `Cashier` role has no permission to add registers.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/317332</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/020/545/a775382b6cc2ea39dd205cec8a8c6217a6165aae_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="2c894f4d-2cba-450b-ae69-12a02b26c201"><a href="https://hackerone.com/reports/502593" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">GitLab disclosed on HackerOne: Attacker is able to access commit...</div><div class="bookmark-description">Summary:** [add summary of the vulnerability] **Description:** [add more details about this vulnerability] ## Steps To Reproduce: To reproduce this vulnerability, we need two accounts, lets say those accounts are: -&gt; victim@gmail.com -&gt; attacker@gmail.com - Create a project from account victim@gmail.com with the following permissions: {F432203} Note that the project visibility should be...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/502593</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="efde3b76-d8ce-4fe9-8e33-7d9b6ba1b070" class="">
</p><p id="12c6083c-a9ea-4eb5-82f0-427c187ef1e4" class="">
</p><h2 id="152c4817-e45d-4683-9a85-c179c5f59b3d" class=""><mark class="highlight-blue">Parameter Tempering
</mark></h2><figure id="b708d97b-f2c0-4d9f-8814-8045c5c0502e"><a href="https://hackerone.com/reports/682344" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">WordPress disclosed on HackerOne: Parameter tampering : Price...</div><div class="bookmark-description">Hello Security Team, I have found that you can buy any products in less amount or even we can say as free by changing the price of the product!! POC : 1) go to https://mercantile.wordpress.org/ 2) choose any product and add to cart 3) Now go to cart add your billing details 4) Intercept request with burpsuite and click on Proceed to Paypal 5) You will get the following request REQUEST...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/682344</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="760f759d-9839-4a1e-a716-0da012b761c2" class="">
</p><figure id="9012edd3-ea06-4d1d-a442-420fd77ff095"><a href="https://hackerone.com/reports/388564" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Shipt disclosed on HackerOne: Price manipulation via fraction...</div><div class="bookmark-description">A security researcher identified an issue in our member application that showed how a user&#x27;s cart would accept fractional quantities of any item; irrespective of whether or not the item was capable of being in a &#x27;fractional&#x27; state (e.g. fractional quantities were being accepted for a half pound of ground beef, but were also being accepted for an iPad).</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/388564</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/o5VCKGxz8tJaCNjsF65XYxcH/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h2 id="f9ed7779-2d57-4692-91b6-2557c1d707ff" class=""><strong><mark class="highlight-red">HTTP PARAMETER POLLUTION</mark></strong></h2><figure id="8ef981b7-8cfd-47d5-a773-3b7f31b6476c"><a href="https://hackerone.com/reports/298265" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: HTTP Parameter Pollution using...</div><div class="bookmark-description">Using semicolons, I was able to override the `for` parameter in the iframe element. This allowed me to load external Greenhouse forms (which are not owned by HackerOne) on the page. Later on, a global fix was applied by Greenhouse on the `boards.greenhouse.io/embed/` endpoint.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/298265</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="eaa7e4ea-c596-4eb4-8d22-9eebc56b4c06" class="">
</p><p id="fa816005-0c85-4457-97d5-ca94db298a1d" class="">
</p><figure id="a2f8c925-6e79-46ea-8712-a83a5693019b"><a href="https://hackerone.com/reports/335339" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Slack disclosed on HackerOne: HTTP parameter pollution from...</div><div class="bookmark-description">Slack&#x27;s career page was using an outdated Greenhouse JavaScript dependency which resulted in an HTTP parameter pollution vulnerability. This would have allowed the loading of external Greenhouse forms (not owned by Slack). We updated the Javascript and the issue is resolved. Thanks @irvinlim!</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/335339</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/069/683fee312381bc46cadc7ea1950abc87944d12c3_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="fa3f1534-0413-42ba-a399-71edae550ad0" class="">
<mark class="highlight-red">TEMPLATE INJECTION
</mark></h1><figure id="9af765c9-f4e7-43f9-bb8c-aba75030a0e7"><a href="https://hackerone.com/reports/423541" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Shopify disclosed on HackerOne: H1514 Server Side Template...</div><div class="bookmark-description">Full story with explanation of how this was exploited can be found here: https://mahmoudsec.blogspot.com/2019/04/handlebars-template-injection-and-rce.html</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/423541</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="def1e834-864d-40cd-8f14-f43261bffe20"><a href="https://hackerone.com/reports/164224" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Unikrn disclosed on HackerOne: Urgent: Server side template...</div><div class="bookmark-description">Hi All, I&#x27;ve found an issue which has allowed me to execute file_get_contents and extract your /etc/passwd file. ##Description It appears as though you are using smarty on the backend for templating. Entering a malicious payload as my firstname, lastname and nickname and then inviting a user to join the site results in the code being executed.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/164224</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/002/672/c6c2b32746235b372285a9047457642b7b9bc6a1_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="7a21eefa-6a24-4a1e-b6d3-14a0901808b8"><a href="https://hackerone.com/reports/271960" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Rockstar Games disclosed on HackerOne: Client-side Template...</div><div class="bookmark-description">In this report, the researcher was able to perform [AngularJS Template Injection](https://hackerone.com/redirect?signature=49c7114e65f27ab7700511ac15aaa633cf22a68b&amp;url=http%3A%2F%2Fblog.portswigger.net%2F2016%2F01%2Fxss-without-html-client-side-template.html) on our Support site in order to retrieve data, including email address, userid and tokens. Typically, a user is always able to retrieve...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/271960</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/002/143/db40b290ac0adcde231da85c33a668f610e6f4df_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="e02104a7-a265-4a06-a99f-5aa35cec0910" class="">
</p><p id="37585f79-d6de-4d70-8df6-b93f71a8b96b" class="">
</p><h1 id="4650758c-86bd-4620-9439-af7cd26f262c" class=""><mark class="highlight-blue">OAUTH VULNERABILITIES</mark></h1><figure id="fd853293-33ac-4301-9c6c-e9ec26214c98"><a href="https://hackerone.com/reports/665651" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">TTS Bug Bounty disclosed on HackerOne: Stealing Users OAuth Tokens...</div><div class="bookmark-description">I found that https://login.fr.cloud.gov/oauth/authorize has vulnerability by open redirect on oauth redirect_uri which can lead to users oauth tokens being leaked to any malicious user. Step : 1, Clicked on link https://login.fr.cloud.gov/oauth/authorize?client_id=███&amp;response_type=token&amp;redirect_uri=https%3A%2F%2Fevil.com%2Fauth%2Fcallback&amp;state=███ 2, Choose any .gov account to login (...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/665651</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/021/499/a8abb6c9702d454ed2bcfa55bb077ac2e49988b9_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="840c64ce-7ab4-431c-9b47-5ea4a699a194" class="">
</p><p id="2899fa86-23d1-45cb-a656-1d4012935cf7" class="">
</p><figure id="9226eedb-9009-49d5-9ca8-0a8b3960a62c"><a href="https://hackerone.com/reports/405100" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">BOHEMIA INTERACTIVE a.s. disclosed on HackerOne: Stealing Users...</div><div class="bookmark-description">Hi, I would like to report an Open redirection on oauth redirect_uri which can lead to users oauth tokens being leaked to any malicious user. **Detail** During the OAUTH flow, the redirect_uri on https://accounts.bistudio.com is not properly validating that the URL given is proper, as such a bypass of filter is possible and hence thereby able to exfiltrate users oauth tokens to that...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/405100</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/018/362/cdc81f05eed3c29e276521da9dff6e209f949352_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="aa3f30a7-0f92-4ce3-ab4c-2acfa75a88e2" class="">
<mark class="highlight-red">Broken Link Cheak</mark></h1><figure id="badd37f2-de99-4347-9f4f-09c3c4e10962"><a href="https://hackerone.com/reports/266908" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">GitLab disclosed on HackerOne: Impersonation attack via Broken Link...</div><div class="bookmark-description">Summary A link on `https://about.gitlab.com/resellers/` was broken and could&#x27;ve allowed a user to impersonate a reseller and attack / scam your customers. ## Proof of Concept 1.) Visit https://about.gitlab.com/resellers/ 2.) Hit `Ctrl+F` and find &quot;intenso&quot; {F219301} 3.) Now click the Facebook link and you&#x27;ll see the Facebook page I&#x27;ve...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/266908</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="3bc99d24-0691-4fe3-af75-a53f8831682b" class="">
</p><p id="18d5ec86-7e7c-40e0-9458-2860ef4ce9a3" class="">
</p><figure id="df14f161-875c-4907-8166-8dfd43c8f17c"><a href="https://hackerone.com/reports/276244" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Legal Robot disclosed on HackerOne: Broken links for stale domains...</div><div class="bookmark-description">Hi, URL: https://www.legalrobot.com/press/2016/07/07/tech4good-on-a-global-scale/ Broken link for an expired domain which is available for sale: http://ecotechfoundation.net/ You may verify that it is available for sale @ https://www.secureserver.net/domains/searchresults.aspx?prog_id=whois&amp;domainToCheck=ecotechfoundation.net&amp;plid=107275&amp;pl_id=107275&amp;ci=83269 Such links pose risk since it...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/276244</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/001/601/0f164c3d9618b04b006b859517ff032ec57ab42a_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="36352936-a253-43e0-a677-3a811bd10f5c" class="">
</p><p id="03288b26-8a48-4eef-8d35-0e435d585b4a" class="">
</p><figure id="d468e063-215f-4283-8108-7f4da4608b11"><a href="https://hackerone.com/reports/279351" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Gratipay disclosed on HackerOne: Broken link for stale DNS entry...</div><div class="bookmark-description">Hi Team, Page: https://gratipay.com/Breadcrumbel/ Broken link for stale DNS entry: ``` Homepage ``` Root domain breadcumbry.com has expiration date: Registrar Registration Expiration Date: 2018-06-10T18:18:30Z And also from whois: Domain Status: OK https://icann.org/epp#ok OK status means it has no protection for deletion/transfer and will be available...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/279351</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/001/868/a75c6649c5b4671b3cf44160af884a7da9fd0b67_original.jpg/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="1b31131a-e2b3-44c1-9643-ee8b77ec77af"><a href="https://hackerone.com/reports/279351" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Gratipay disclosed on HackerOne: Broken link for stale DNS entry...</div><div class="bookmark-description">Hi Team, Page: https://gratipay.com/Breadcrumbel/ Broken link for stale DNS entry: ``` Homepage ``` Root domain breadcumbry.com has expiration date: Registrar Registration Expiration Date: 2018-06-10T18:18:30Z And also from whois: Domain Status: OK https://icann.org/epp#ok OK status means it has no protection for deletion/transfer and will be available...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/279351</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/001/868/a75c6649c5b4671b3cf44160af884a7da9fd0b67_original.jpg/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="46708566-6dd0-44e9-b04c-28753b48ad65" class="">
</p><p id="4aeaf77a-5aec-4411-9ae2-c57d2de798e7" class="">
</p><p id="3744d520-a315-4dea-a406-23774728dadf" class="">
</p><h1 id="83b97ae3-325e-4cdd-b4c4-b7b65dacffb8" class=""><mark class="highlight-red">CSRF Login And Logout\</mark></h1><p id="17964ec9-8339-4115-844a-e8831575449a" class="">Tool</p><p id="95879578-5191-42b8-b4b6-46a34a2c5d3f" class="">
</p><p id="a48e8d92-0fec-4355-9350-85668cabacb1" class="">xsrfprobe --help</p><figure id="4148a55e-b652-4f6d-a43c-f73babbff3b9"><a href="https://hackerone.com/reports/244778" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">WakaTime disclosed on HackerOne: Logout CSRF</div><div class="bookmark-description">Cross-Site Request Forgery (CSRF) logout application Because of that gap, he updates a man&#x27;s attack in the middle and is exposed to the agent and all his personal data at risk This may cause the web to be compromised I will send a test script and a video explaining everything about the problem Resource https://wakatime.com Parameter login Method Get Detection Type Cross-Site Request Forgery...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/244778</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/021/801/c3af6aa265b9b7d7d6e5fd52bb768e43b06d4a44_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="68ceb8f5-d876-477b-b052-2132ad7ff645" class="">
</p><p id="3f7d9d94-8b77-45aa-96aa-a100cb84b601" class="">
</p><figure id="03febaf9-3257-40da-9b62-78be56b28c42"><a href="https://hackerone.com/reports/171398" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: (HackerOne SSO-SAML) Login CSRF,...</div><div class="bookmark-description">Summary:### Login CSRF, Open Redirect, and Self-XSS Possible Exploitation through HackerOne SSO-SAML ###PoC### - Go to █████; Use a browser window with clear cookies. Source-code: ``` setTimeout(function(){document.location.href =...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/171398</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="3a7e98ff-b0d0-4958-a09e-d80d804daed4" class="">
SQL Header based And Cookie Based</h1><figure id="1c1e1ad9-15e9-48cc-be4d-fd1241bd3b4a"><a href="https://hackerone.com/reports/105419" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Instacart disclosed on HackerOne: Cookie-Based Injection</div><div class="bookmark-description">Hi** Security Team instacart I&#x27;m Found Vulnerability **Cookie-Based Injection** It&#x27;s may be possible to steal or manipulate session and cookies if attacker can injection **XSS** . details --- in path **/help/** contain header in cookie paramter **ahoy_visitor** and **ahoy_visit** it&#x27;s allow injection because re request allow **Content-Type: text/html** without filtering **request**...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/105419</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/555/df662b77c791ed1296275d032f446300e1a5a6b3_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="d7e74722-37f6-4277-8aec-16ddd9e32f9d"><a href="https://hackerone.com/reports/300176" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Zomato disclosed on HackerOne: [https://reviews.zomato.com] Time...</div><div class="bookmark-description">@samengmg found an cookie based SQL injection on https://reviews.zomato.com.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/300176</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="0b85d794-e4ac-4216-b21c-775bfee61864" class="">
</p><figure id="83646430-2022-46b2-b1e1-ccb2bf1d58af"><a href="https://hackerone.com/reports/115304" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Paragon Initiative Enterprises disclosed on HackerOne: Blind SQL INJ</div><div class="bookmark-description">The test result seems to indicate a vulnerability because the response contains SQL Server errors. This suggests that the test managed to penetrate the application and reach the SQL query itself, by injecting hazardous characters. The following changes were applied to the original request: Added HTTP header &#x27;X-Forwarded-For: &#x27;&#x27; GET /b/g-1EtOkwH8pAYnEr HTTP/1.1 X-Forwarded-For:...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/115304</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="d8b54df2-d0df-42ad-9e2f-21ceb9325c97" class="">SSRf  (<mark class="highlight-red">Finding SSRF Parameter Using Hunt Brup Pulgin or  gf  ,json (against The crawl Data  U Found at The Crawling step </mark> )  </p><figure id="1da7dfc8-6ddc-4059-a179-32968a20c00a"><a href="https://hackerone.com/reports/793704" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Node.js third-party modules disclosed on HackerOne: Server-Side...</div><div class="bookmark-description">I would like to report about SSRF vulnerability in CMS Ghost blog It allows attacker able to send a crafted GET request from a vulnerable web application # Module **module name:** ghost **version:** 3.5.2 **npm page:** `https://www.npmjs.com/package/ghost` **website page** `https://ghost.org/` ## Module Description Ghost is the world&#x27;s most popular open source headless Node.js CMS. ##...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/793704</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="a1286cf1-daaf-4889-ab4a-e998b8565686"><a href="https://hackerone.com/reports/514224" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">TTS Bug Bounty disclosed on HackerOne: SSRF in Search.gov via ?url=...</div><div class="bookmark-description">Summary: `https://search.usa.gov/help_docs` endpoint is vulnerable to SSRF via `url` parameter. The parameter is protected but can be bypassed using LF (%0A). # Steps To Reproduce: 1. Login to Search.gov and click `help manual`. 2. The following request was vulnerable. - Request ``` GET /help_docs?url=https%3A%2F%2Fsearch.gov%2Fmanual%2Faccount.html HTTP/1.1 Host:...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/514224</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/021/499/a8abb6c9702d454ed2bcfa55bb077ac2e49988b9_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="700a0c72-005d-403d-988b-b7e3741f1772" class="">
</p><p id="05334e1f-0f7f-4350-b798-d168c11c2665" class="">
</p><h1 id="37d964a4-e746-4bdd-b5c9-39f0f3d0ec3c" class="">
<mark class="highlight-pink">Xss </mark></h1><p id="c752f771-6501-4225-993f-31110544c6e4" class="">
</p><p id="c9d1fe20-7074-4e90-b8b6-3d3f02f045b1" class="">Easy Automation XSS Tip</p><p id="fcaa9aba-80f3-47fd-bca0-ad7fb5b92b18" class="">cat subdomains.txt | waybackurls &gt;&gt; wayback.txt</p><p id="f45c7d10-9fb3-4b00-819d-cdfd5fa5bb6e" class="">cat subdomains.txt | hakrawler -depth 3 -plain &gt;&gt; spider.txt</p><p id="50379cea-da89-40e2-92a0-d78272d7ed91" class="">cat spider.txt wayback.txt | kxss == XSS $$$</p><p id="e3ec8a1c-aad3-4efe-ab01-7d203a522e37" class=""> ( Using Hunt Brup Pulgin or Shive gf json  <mark class="highlight-red">(against The crawl Data  U Found at The Crawling step) </mark>File or Some One liners <mark class="highlight-red"> </mark></p><figure id="e87293ac-015e-425e-b324-6091432243ea"><a href="https://medium.com/@corneacristian/top-25-xss-bug-bounty-reports-b3c90e2288c8" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Top 25 XSS Bug Bounty Reports</div><div class="bookmark-description">In this article, we will discuss Cross-Site Scripting (XSS) vulnerability, how to find one and present 25 disclosed reports based on this issue. XSS stands for Cross-Site Scripting and it is a web-based vulnerability in which an attacker can inject malicious scripts (usually JavaScript) in the application.</div></div><div class="bookmark-href"><img src="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="icon bookmark-icon"/>https://medium.com/@corneacristian/top-25-xss-bug-bounty-reports-b3c90e2288c8</div></div><img src="https://miro.medium.com/max/677/1*9dGlqYIZkmMSMh8zMI_oiQ.png" class="bookmark-image"/></a></figure><figure id="7e5851ba-9e6b-49c5-8f91-2d1f6232b8ce"><a href="https://hackerone.com/reports/485748" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Twitter disclosed on HackerOne: Stored XSS on reports.</div><div class="bookmark-description">Summary:** Stored XSS can be submitted on reports, and anyone who will check the report the XSS will trigger. **Description:** Stored XSS, also known as persistent XSS, is the more damaging than non-persistent XSS. It occurs when a malicious script is injected directly into a vulnerable web application.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/485748</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="53445e0e-17af-4e9d-90f0-449b0201bdad"><a href="https://hackerone.com/reports/840759" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: Reflected XSS on...</div><div class="bookmark-description">Good day :) I hope your doing as well as can be during these difficult times. I have found xss at 2 endpoints: https://www.hackerone.com/resources/ and https://resources.hackerone.com The payloads that work are...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/840759</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="1e7a6cbc-f5e7-41b1-b083-494e2b47e377" class="">
</p><h2 id="0d6a445f-1c0a-46ab-8456-8b2adadcaa8c" class="">
<mark class="highlight-red">Cheak Cryptograpy in Reset Function</mark></h2><figure id="35d13574-a7bc-4768-a1c9-69d0af4ae393"><a href="https://hackerone.com/reports/576504" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Revive Adserver disclosed on HackerOne: Authentication Bypass by...</div><div class="bookmark-description">Hi, This is a fun bug I came across while doing a pentest for a client, after going through Revive Advserver&#x27;s code for a few hours, I found this authentication bypass. This vulnerability seem to affect all versions, including the latest one, I was sent by one of your developers to report it here.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/576504</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/002/367/4f47a5b4a364515d4bbdc17550d67ea5415363cd_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="6c727bb0-27db-4ea3-97e8-38e2d8daed3a" class="">
</p><figure id="d2f23e29-7f6b-4204-b0a4-0de72e7531c8"><a href="https://hackerone.com/reports/92251" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Uber disclosed on HackerOne: Issue with Password reset functionality</div><div class="bookmark-description">Dear Team, There are password change issues with uber. there are two issues: 1)User is not receiving notification when he reset password via password reset link. 2)Password reset link is not expiring after used once. Good thing: when user change his info like profile update, password change.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/92251</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/314/24ea21370a71b18eafb5722d5855825ab622b5dd_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="ca22cdce-5668-4416-9229-6b90285e93d5" class="">
<mark class="highlight-purple">Unicode injection in Email Parameter @</mark></h1><figure id="5c51468c-a980-456f-8fdc-65c2da739923"><a href="https://hackerone.com/reports/262004" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Unikrn disclosed on HackerOne: HTML injection in email in unikrn.com</div><div class="bookmark-description">NOTE! Thanks for submitting a report! Please replace *all* the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to verify and then potentially issue a bounty, so be sure to take your time filling out the report!</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/262004</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/002/672/c6c2b32746235b372285a9047457642b7b9bc6a1_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="6f76fc29-e445-4e08-8968-7844b7dfa81f" class="">
</p><figure id="5fc47b2d-bdc2-453e-ab05-c3573a1ba17f"><a href="https://hackerone.com/reports/66262" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: mailto: link injection on...</div><div class="bookmark-description">I just found that entering a non-existing porogram returns the following response: &gt;The Directory doesn&#x27;t have a profile matching these criteria. &gt;If an organization has published security contact information or a vulnerability disclosure policy, **please let us know.** The bold part has a mailto: link which is in following format:...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/66262</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="a638d5d4-b6bb-45d8-aef6-7513d9bdefcb" class="">
<mark class="highlight-purple">Bypassing Rate Limit</mark></h1><p id="ae1300c3-265c-4aa2-ab36-6f5e69ecd59f" class="">
</p><p id="247e3eac-1548-4225-914c-8a444a5abd64" class="">
Headers:- X-originating-IP:ip
| X-Forwarded-FOR:ip
| X-Remote-IP:ip
| X-Remote-Addr
| X-Client-IP:ip
| X-Forwarded-Host:ip)</p><figure id="6848d180-3c0e-4e79-b441-560c2266986f"><a href="https://hackerone.com/reports/165727" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Slack disclosed on HackerOne: Rate-limit bypass</div><div class="bookmark-description">Hello Slack, This vulnerability is about a 2FA Bypass, On Slack Web Application there is rate limit implemented. After performing 4-6 failed 2FA Attempt, Rate limit logic will ge Triaged and ask user to wait for next attempt(preventing automated 2FA Attempts) I tested the same using iOS App(iOS 9.3.3 iPad Air 2) and found that API Endpoint &quot;/api/auth.signin&quot; have no rate limit...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/165727</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/069/683fee312381bc46cadc7ea1950abc87944d12c3_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="e4d83a56-9c34-4158-b184-b9caefa8fa1b" class="">
</p><p id="2093bf96-2c3b-4d48-b94d-3173db71cdc7" class="">
</p><figure id="b1bb03f9-87e0-417e-b75c-9a3dfdb5e5ed"><a href="https://hackerone.com/reports/170310" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: Bypass rate limiting on...</div><div class="bookmark-description">A blog post was released after discovering this issue here: https://zseano.com/tut/3.html</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/170310</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="3ae29963-5db0-4f1d-9017-02cdbb93b79e" class="">
<mark class="highlight-orange">Request Smuggling</mark></h1><p id="bb2b8fbd-255e-4860-b322-0a36dacda24a" class="">
</p><figure id="3827a057-ebd7-4e2e-8a00-6e49e2ad15b3"><a href="https://hackerone.com/reports/866382" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Brave Software disclosed on HackerOne: HTTP Request Smuggling</div><div class="bookmark-description">When malformed or abnormal HTTP requests are interpreted by one or more entities in the data flow between the user and the web server, such as a proxy or firewall, they can be interpreted inconsistently, allowing the attacker to &quot;smuggle&quot; a request to one device without the other device being aware of it.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/866382</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/015/688/2aad5641af643ee4f4402896e4747293f6e9c5ca_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="c9bbcd63-c716-4503-973f-ac29fe759d8f" class="">
</p><figure id="42dafcde-a944-41c4-ba1d-d8f7e414fc48"><a href="https://hackerone.com/reports/737140" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Slack disclosed on HackerOne: Mass account takeovers using HTTP...</div><div class="bookmark-description">This researcher exploited an HTTP Request Smuggling bug on a Slack asset to perform a CL.TE-based hijack onto neighboring customer requests. This hijack forced the victim into an open-redirect that forwarded the victim onto the researcher&#x27;s collaborator client with slack domain cookies. The posted cookies in the customer request on the collaborator client contained the customer&#x27;s secret session...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/737140</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/069/683fee312381bc46cadc7ea1950abc87944d12c3_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="a048a941-80a0-4c10-a631-4480ae89a9bf" class="">
</p><figure id="726ae78b-7808-47b4-ae93-d0a4b3b1026f"><a href="https://github.com/defparam/smuggler" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">defparam/smuggler</div><div class="bookmark-description">An HTTP Request Smuggling / Desync testing tool written in Python 3 A special thanks to James Kettle for his research and methods into HTTP desyncs And a special thanks to Ben Sadeghipour for beta testing Smuggler and for allowing me to discuss my work at Nahamcon 2020 This tool does not guarantee no false-positives or false-negatives.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/defparam/smuggler</div></div><img src="https://avatars0.githubusercontent.com/u/6956742?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="d3835daf-3fc6-4443-a006-891fac1c1f9c" class="">
</p><h1 id="5a10332e-75a9-49d2-aab8-bb0b9b47950c" class=""><mark class="highlight-red">RCE</mark></h1><p id="510e231d-9f1f-4195-93b1-646de6d781cc" class="">
</p><figure id="6ebb65ba-8d38-47ab-ae24-f44939e3901c"><a href="https://medium.com/@corneacristian/top-25-rce-bug-bounty-reports-bc9555cca7bc" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Top 25 RCE Bug Bounty Reports</div><div class="bookmark-description">In this article, we will discuss Remote Code Execution (RCE) vulnerability, how to find one and present 25 disclosed reports based on this issue. RCE stands for Remote Code Execution and it is a vulnerability in which an attacker can execute malicious code or commands on a target machine.</div></div><div class="bookmark-href"><img src="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="icon bookmark-icon"/>https://medium.com/@corneacristian/top-25-rce-bug-bounty-reports-bc9555cca7bc</div></div><img src="https://miro.medium.com/max/1200/1*5w_sMUwIxxXOzIavIkROKg.jpeg" class="bookmark-image"/></a></figure><h1 id="cff8abb9-3f7a-436f-b831-9aa6f5406f5d" class="">
Open Redirect using (wayback gau gosipder)
</h1><figure id="5cd0b6ce-26a4-4cb8-bac3-da154d6062bc"><a href="https://hackerone.com/reports/373916" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Hanno&#x27;s projects disclosed on HackerOne: Open redirect on...</div><div class="bookmark-description">Summary:** There is an Open Redirect on https://blog.fuzzing-project.org/exit.php?url= due to the application not checking the value passed by the user to the &quot;url&quot; parameter. **Description:** Unchecked redirects occur when an application redirects to a destination controlled by attackers. This often occurs in functionality returning users to a previous page, e.g.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/373916</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/030/278/97035f061f6de55a9362b39edae4f5948bda6735_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="497ddefe-e075-4112-8565-767b71bd1e0d"><a href="https://hackerone.com/reports/683298" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Twitter disclosed on HackerOne: XSS and Open Redirect on MoPub Login</div><div class="bookmark-description">Very simple open redirect made much more impactful by the lack of filtering javascript URIs. Thanks again to the Twitter team for a quick response/bounty!</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/683298</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="f6e8db67-37e6-4a92-97a8-c6c7c5247a01" class="">
</p><h1 id="4a80677a-c854-4bc7-8e28-51fca2991821" class=""><mark class="highlight-purple">Socail-Signon Bypass</mark></h1><figure id="f71fde29-b53f-43fb-a2e4-0f119aad6a08"><a href="https://hackerone.com/reports/219205" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Uber disclosed on HackerOne: Authentication bypass on auth.uber.com...</div><div class="bookmark-description">subdomain takeover of saostatic.uber.com allowed for access to *.uber.com scoped SSO cookies. In response to this report, we immediately fixed the subdomain takeover and then added additional protections (IP restriction) to our *.uber.com SSO cookies to mitigate ATO possibility of subdomain takeover in the future.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/219205</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/314/24ea21370a71b18eafb5722d5855825ab622b5dd_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="f9844b9d-8cb4-4a25-bfd1-80509460a8ae" class="">
</p><figure id="9153e8f7-870f-4f9d-ac11-e3974b6c1a55"><a href="https://hackerone.com/reports/729960" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Genasys Technologies disclosed on HackerOne: Ability to bypass...</div><div class="bookmark-description">Summary: An attacker is able to login to any email account (that doesn&#x27;t belong to him) through using the OAuth functionality (https://staging.genasystech.co.uk/d2c-api/v1/account/login/provider) ## Steps To Reproduce: 1. Register an account with an email and verify it using the one time code that is asked upon registration, I registered ██████ 2.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/729960</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/041/595/dc527462b01f14b2699cbca0e3817a4ac7f3a668_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="e6e3c76e-8a50-4e30-b80e-b0daed2f98fa" class="">
</p><figure id="2891a860-c54a-4002-8a2a-6cc3af07f39b"><a href="https://hackerone.com/reports/209008" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Automattic disclosed on HackerOne: Authentication Bypass - Chaining...</div><div class="bookmark-description">Product / URL** https://en.instagram-brand.com/wp-json/brc/v1/login/ **Description and Impact** An attacker can perform account takeover by leveraging following two vulnerabilities: Auth Bypass = Username Enumeration + Login Brute Force A. Username Enumeration: ------------------------------- For the site https://en.instagram-brand.com/, it is made sure that a malicious user cannot...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/209008</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="74a60ac4-32a9-411b-802e-58c905e2794f"><a href="https://hackerone.com/reports/168108" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">New Relic disclosed on HackerOne: SSO Authentication Bypass</div><div class="bookmark-description">Hi, As I reported to security@newrelic.com, here&#x27;s the authentication bypass vulnerability report. I&#x27;ve left some details out in this report but you&#x27;re welcome to reach out to me with any questions. Here&#x27;s a more detailed overview: # SSO Authentication Bypass ## Summary It is possible to POST a custom SAML response to https://rpm.newrelic.com/accounts/$account_id/sso/saml/finalize and...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/168108</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/017/011/eba06abb23bd6c9c7d719ddafb9fa83bd2d66aaa_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="3687d6a7-4218-407e-8a61-16864e9a3bb9" class="">
</p><h1 id="e2704eec-6ee0-450b-b678-43b57615cbab" class="">
<mark class="highlight-pink">File Upload</mark></h1><p id="1eb32a10-ea1b-441d-896d-97a9f39c8ce4" class="">
</p><p id="adf4eed3-45e6-4e13-9d5e-36b874b3e460" class=""> leads to CSRF,SSRF,xss,LFI,XXE,RCE(fuxuploader or manual detection)</p><p id="f6a269f9-20ae-44f4-8701-33968026eba5" class="">
</p><figure id="3389b237-74bf-49fa-8c8e-131b26c5fdd9"><a href="https://hackerone.com/reports/823588" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Stripo Inc disclosed on HackerOne: Unrestricted File Upload on...</div><div class="bookmark-description">Hi Stripo Inc, I found 2 Unrestricted File Upload Vulnerabilities on your website. First Vulnerability: &gt;Step to Reproduce 1. Create an account in &quot;https://my.stripo.email&quot; 2. Simply Download a php shell from internet and open with text editor. ex: r57 shell 3. Then save it as JPEG file. 4.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/823588</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/042/368/5b1017d17427be6c8e05cbc95da27646bf45e925_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="e47a8bba-f7df-4829-9617-e9d6c0f0f082"><a href="https://hackerone.com/reports/748903" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">SEMrush disclosed on HackerOne: Unrestricted file upload in...</div><div class="bookmark-description">@zcashi found vulnerability in My Reports Tool.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/748903</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/015/966/1758d582916ec16c9ca6f4fbd88881b1152533d1_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="bc85848e-56d2-4c3e-81f2-0eed8fe3b636"><a href="https://hackerone.com/reports/826288" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Qulture.Rocks disclosed on HackerOne: Unrestricted File Upload in...</div><div class="bookmark-description">Summary: The application allows the attacker to upload dangerous file types that can be automatically processed within the product&#x27;s environment. ## Steps To Reproduce: 1. Hit the browser with below URL. https://qa.qulture.rocks/en/users/sign_in 2. Open The Cat window. 3. Upload any exe file . 4. Click on send button. ## Supporting Material/References: *...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/826288</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/041/772/40eefc9cc099800ed74a1faf2ae863ae1cccb0dc_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="7b02f4c6-8e59-40f1-a873-72aa46873ae0" class="">
</p><p id="bcff133a-40a5-4fa4-b186-3a588982eca2" class="">
</p><h1 id="183d78e1-98e9-4455-bf57-3c639a54cb89" class="">
<mark class="highlight-red">XEE Injection xml entity injection</mark></h1><figure id="3fdd302a-81e3-44a9-969b-bac606a88cf3"><a href="https://hackerone.com/reports/36450" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">QIWI disclosed on HackerOne: [send.qiwi.ru] Soap-based XXE...</div><div class="bookmark-description">An XML external entities injection vulnerability exists on the soap server hosted on send.qiwi.ru. The attack allows an attacker to open local files (although perhaps not return the data, see below), leading at best to a DoS.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/36450</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/215/f578bbb9421365fab2e51aa7482bea82006d7c0c_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="51f91c6c-818d-439b-9b45-8117bbb7adbb" class="">
</p><figure id="1bc91f0e-8cc4-4d20-b45d-dcd40ced0660"><a href="https://hackerone.com/reports/500515" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Starbucks disclosed on HackerOne: XXE at...</div><div class="bookmark-description">johnstone discovered that both ecjobs.starbucks.com.cn/retail/hxpublic_v6/hxdynamicpage6.aspx &amp; ecjobs.starbucks.com.cn/recruitjob/hxpublic_v6/hxdynamicpage6.aspx page and were vulnerable to an XML External Entities (XXE) attack. @johnstone - thank you for reporting this vulnerability and your additional efforts to confirm the resolution.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/500515</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/001/989/c9aa38cf3b1a91daa085d31e23d23f34cd1874df_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="baf43268-4dc0-40a4-a1ca-3ed1b0c1aed5"><a href="https://hackerone.com/reports/483774" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">DuckDuckGo disclosed on HackerOne: XXE on https://duckduckgo.com</div><div class="bookmark-description">An XML External Entity (XXE) injection vulnerability was discovered in the `x.js` endpoint on https://duckduckgo.com via `u` parameter. This was due to improper sanitation of external XML entities. The results was a leak of certain world readable files on the system. This issue was patched.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/483774</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/010/995/8b8a2ef803e7e6b78d77ea654f36894160dba4f6_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="afc3a442-4d27-418a-b8cc-25ae32578f64" class="">
</p><figure id="a1fa3cfd-dde4-4143-a8af-aea50bc142fa"><a href="https://hackerone.com/reports/55431" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">drchrono disclosed on HackerOne: XML Parser Bug: XXE over which...</div><div class="bookmark-description">Hello security team, I have reported this issue on Feb 6, 2015 and i&#x27;m resubmit it here again. I was able to do XXE attack on your site and exposed the /etc/passwd file. Scenario: 1. Login to drchrono site. 2. Click on patients-&gt;patient 3. Click on &#x27; Update patient (via C-CDA XML).&#x27;</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/55431</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/001/492/22504e1f134263ff85b7870959fa127edcd98bd0_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="a91f5c3d-5344-4f4d-8b7e-699cd56c460b" class="">
<mark class="highlight-blue"><a href="https://hackerone.com/reports/280914">Web Cache Posning</a></mark></h1><figure id="c3139669-6dc2-4d64-ae6a-7cbb2eaf88a7"><a href="https://hackerone.com/reports/492841" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Postmates disclosed on HackerOne: Web cache poisoning attack leads...</div><div class="bookmark-description">Hello, Your Web-Server is vulnerable to web cache poisoning attacks. This means, that the attacker are able to get another user informations. If you are logged in and visit this website (For example): https://postmates.com/SomeRandomText.css Then the server will store the information in the cache, BUT with the logged in user information :) A non-logged-in user can then visit this website and...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/492841</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/002/607/ad4f0340386fa9a23a54b9a437a28f7ffa0d7090_original.jpg/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="c43cf4e4-80a1-4a3d-9b93-2e81e23174d1" class="">
</p><figure id="56847792-a36b-4b9f-aeca-9ec15ff6cc98"><a href="https://hackerone.com/reports/409370" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: Denial of service via cache...</div><div class="bookmark-description">An attacker can persistently block access to any/all redirects on www.hackerone.com by using cache poisoning with the X-Forwarded-Port or X-Forwarded-Host headers to redirect users to an invalid port. To replicate: ```curl -H &#x27;X-Forwarded-Port: 123&#x27; https://www.hackerone.com/index.php?dontpoisoneveryone=1``` Then try to load https://www.hackerone.com/index.php?dontpoisoneveryone=1 in your...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/409370</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="71b21094-abbe-43ee-abf7-eb81eadd79b6" class="">
</p><figure id="22460650-83f6-4319-b008-17007f033dd8"><a href="https://hackerone.com/reports/429747" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Nextcloud disclosed on HackerOne: https://help.nextcloud.com::: Web...</div><div class="bookmark-description">Hi there, I just found the website: https://help.nextcloud.com is infected with &quot;Web cache poisoning&quot; Abuse this bug, Attacker can: 1. Poison your cache with HTTP header with XSS included. This attack may leads to Stored XSS 2. Poison your website contains malware url (cache poisoned by attacker), maybe the user&#x27;s browser (like Firefox, Chrome) will block your website...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/429747</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/013/291/68f57538488b5716cdeeb6b78955f9e46685bc09_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="9f6de9fd-2780-46e1-b033-54134c40fd41" class="">
<mark class="highlight-orange">Bussiness Logic Error</mark></h1><figure id="378a4fa2-e3e2-4e80-b5b0-dfc526347e06"><a href="https://hackerone.com/reports/336131" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Shopify disclosed on HackerOne: Potential to abuse pricing errors...</div><div class="bookmark-description">If someone abandons a shopping cart and the price changes between that time and when the abandoned cart recovery email is sent, the saved cart will always show the old price.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/336131</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="1189cff0-b214-44ba-a66a-2d51e4d7bab3"><a href="https://hackerone.com/reports/549364" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: Account recovery text message is...</div><div class="bookmark-description">When users setup Account recovery at Authentication section Hackerone sends them text message to their updated phone number with a wrong domain. Special thanks to @babayaga_ for helping me out. :)</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/549364</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="47e657f3-e3dd-43e4-b19d-594deda1f881"><a href="https://hackerone.com/reports/280914" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Inflection disclosed on HackerOne: Business Logic Flaw allowing...</div><div class="bookmark-description">Researcher misunderstood the names and permissions assigned to various roles in the GoodHire application - the permissions are working as intended. Nevertheless, the researcher requested for the report to be disclosed.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/280914</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/002/653/6a48ab1586701f9bc59bace29e59fb3d62702b10_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="a5238e48-c539-4bac-a8da-1066ae2b0348" class="">
<mark class="highlight-pink">Buffer overflow</mark></h1><figure id="c146625d-e8a9-4aa8-ac82-9f02909ee539"><a href="https://hackerone.com/reports/470520" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Valve disclosed on HackerOne: RCE on Steam Client via buffer...</div><div class="bookmark-description">Introduction In Steam and other valve games (CSGO, Half-Life, TF2) there is a functionality to find game servers called the server browser. In order to retrieve the information about these servers the server browser communicates with a specific UDP protocol called [server queries](https://developer.valvesoftware.com/wiki/Server_queries). The protocol is well described in the online...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/470520</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/023/363/c78d46a7d0ea39e3a15a7c19c1a48634f2571eb9_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="1534feac-9efb-4691-925c-9e8bd61bbd78"><a href="https://hackerone.com/reports/363658" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Liberapay disclosed on HackerOne: Buffer overflow</div><div class="bookmark-description">A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold or when a program attempts to put data in a memory area past a buffer. In this case, a buffer is a sequential section of memory allocated to contain anything from a character string to an array of integers.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/363658</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/028/411/c0a012abdcef38b417e29616505b1a3b4ed87b81_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="9a602bf1-3cff-4a54-abe6-d9769b5fb591"><a href="https://hackerone.com/reports/424447" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Perl (IBB) disclosed on HackerOne: Integer overflow leading to...</div><div class="bookmark-description">There exists an integer overflow in Perl_my_setenv @ util.c : 2070 2070: void Perl_my_setenv(pTHX_ const char *nam, const char *val) { ... 2166: const int nlen = strlen(nam); ... 2171: vlen = strlen(val); 2172: new_env = (char*)safesysmalloc((nlen + vlen + 2) * sizeof(char)); Here in a 64 bit version of Perl, since the arguments `nam` and `val` are user controlled, the...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/424447</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/030/06e86a090af9d395cec5535eea83b90c72274566_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="fd02143e-4140-4be7-9290-2e4cc10e7f27"><a href="https://hackerone.com/reports/484398" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">VLC (European Commission - DIGIT) disclosed on HackerOne: Buffer...</div><div class="bookmark-description">Summary:** When parsing an invalid AVI file, a buffer overflow might occur. **Description:** The ReadFrame function in the avi.c file uses a variable i_width_bytes, which is obtained directly from the file. It is a signed integer. It does not do a strict check before the memory operation(memmove, memcpy), which may cause a buffer overflow.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/484398</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/036/863/7e335b4fc788d5e608b72fe2eebbf92f7cd7980d_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="f055d022-16b7-489d-8830-c4ba54969e2d" class=""><mark class="highlight-red">Source Code Disclosure
</mark></h1><figure id="0782e2a1-079a-4b02-95c3-f12a3398e15e"><a href="https://hackerone.com/reports/211418" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Rockstar Games disclosed on HackerOne: Source Code Disclosure (CGI)</div><div class="bookmark-description">Hello guys. I would like to share with you my discovery. The fact is that at: &gt; https://www.rockstargames.com/gta/game/highscores.cgi Anyone can see the source code of the script {F166966} check please Regards @d1v3r</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/211418</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/002/143/db40b290ac0adcde231da85c33a668f610e6f4df_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="89e75158-c279-4950-b3c2-5f026720caac"><a href="https://hackerone.com/reports/819735" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Razer disclosed on HackerOne: Source Code Disclosure</div><div class="bookmark-description">The tester discovered a PHP file with source code exposed. There was no known exploit.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/819735</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/Z49PFcR6KPvfqpAhqzW5ojdc/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="34cf5e8d-07ad-4dc4-87fe-ba57a67a2fdb"><a href="https://hackerone.com/reports/521960" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Mail.ru disclosed on HackerOne: Source code disclosure</div><div class="bookmark-description">PHP configuration file was available for download on few terrhq.ru subdomains</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/521960</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/065/1ec04a6b87b02422d913b5c53d5247de91d64718_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="6edc0086-e04d-4c57-a27b-19398e616729" class="">
</p><figure id="1518ea78-e936-42f4-ac8c-88f4aed64af4"><a href="https://hackerone.com/reports/145745" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Nextcloud disclosed on HackerOne: Business/Functional logic bypass:...</div><div class="bookmark-description">In nextcloud the default admin can not be removed from his admin group. The group toggle request looks like this: ``` POST /nextcloud/index.php/settings/ajax/togglegroups.php HTTP/1.1 Host: 139.59.9.184 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:47.0) Gecko/20100101 Firefox/47.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type:...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/145745</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/013/291/68f57538488b5716cdeeb6b78955f9e46685bc09_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="5ed33567-305b-41aa-8b2e-cf6c70994776" class="">
<mark class="highlight-teal">Information disclosure</mark></h1><p id="906896ab-f702-4478-9cce-1455e6a3bad9" class="">
</p><figure id="19a0f0bd-2191-4d43-9450-f790fc4476a5"><a href="https://hackerone.com/reports/321249" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Vanilla disclosed on HackerOne: Forum Users Information Disclosure</div><div class="bookmark-description">Summary:** An unauthorized (even unauthenticated) user is able to view some private information about forum users. this information includes: email address (even if the user not allows it), IP address of the user, data of some of the private messages between two users.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/321249</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/017/443/2720e6aeb834de4fd40765a5cae34abb78eb66cd_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="4ea0fd2e-d1b6-41fa-8fc7-8ca1de38a26a" class="">
</p><figure id="79381d0f-f1eb-41f9-8e3e-bea481214d82"><a href="https://hackerone.com/reports/542340" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Uber disclosed on HackerOne: Sensitive user information disclosure...</div><div class="bookmark-description">It was possible for an attacker to insert another user&#x27;s UUID into the userUuid POST parameter when making a request to https://bonjour.uber.com/marketplace/_rpc?rpc=getConsentScreenDetails, allowing them to retrieve personal data from the victim user&#x27;s account, as well as the user&#x27;s mobile auth token, which could allow them to make requests to mobile APIs as the victim.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/542340</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/314/24ea21370a71b18eafb5722d5855825ab622b5dd_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="9c82ebe5-08ae-43bf-84dc-194122cd81eb" class="">
<mark class="highlight-red">Web-cache deception</mark></h1><figure id="0a969416-605e-4c7f-9438-9f9bbde8e0aa"><a href="https://hackerone.com/reports/397508" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Chaturbate disclosed on HackerOne: Web cache deception attack -...</div><div class="bookmark-description">Hello, I have found new Vulnerability in your website which called Web cache deception attack. It&#x27;s found first time in Paypal. ###Web Cache Deception Attack Websites often tend to use web cache functionality to store files that are often retrieved, to reduce latency from the web server.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/397508</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/030/475/178c32f60a890eb06ce5d698d44b3eafa35ccf8c_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="ba9e5fc8-7695-413b-a76a-79afeb6c46b1"><a href="https://hackerone.com/reports/439021" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">SEMrush disclosed on HackerOne: Web cache deception attack - expose...</div><div class="bookmark-description">Hello, I have found new Vulnerability in your website which called Web cache deception attack. It&#x27;s found first time in Paypal. ###Web Cache Deception Attack Websites often tend to use web cache functionality to store files that are often retrieved, to reduce latency from the web server.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/439021</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/015/966/1758d582916ec16c9ca6f4fbd88881b1152533d1_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="01db12aa-2bd2-49f4-bc3f-8c63abb65e29" class="">
</p><h1 id="c80a777f-8d34-444c-b853-a54a5d6b5dfd" class="">
<mark class="highlight-purple">RACE CONDITIONS</mark></h1><figure id="f0eb4322-e62e-4aa4-babe-ea33689b6141"><a href="https://medium.com/@corneacristian/top-25-race-condition-bug-bounty-reports-84f9073bf9e5" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Top 25 Race Condition Bug Bounty Reports</div><div class="bookmark-description">In this article, we will discuss Race Condition vulnerability, how to find one, and present 25 disclosed reports based on this issue. According to OWASP: &quot;A race condition is a flaw that produces an unexpected result when the timing of actions impact other actions.</div></div><div class="bookmark-href"><img src="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="icon bookmark-icon"/>https://medium.com/@corneacristian/top-25-race-condition-bug-bounty-reports-84f9073bf9e5</div></div><img src="https://miro.medium.com/max/1200/1*OSPb6it5VY9Zc3uz259TEA.jpeg" class="bookmark-image"/></a></figure><p id="9cee8b09-b8bd-4cd1-be2b-2076b644967e" class="">
</p><h1 id="316d9eb7-be21-4e48-baa3-6fea165afe77" class="">
<mark class="highlight-red">APPLICATION LOGIC AND CONFIGURATION VULNERABILITIES</mark></h1><p id="88b9621f-ba67-4b5f-beb8-cf885ba11992" class="">
</p><figure id="366c8df6-ddf8-4049-8115-9bb826589a8b"><a href="https://blog.zsec.uk/pwning-pornhub/" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Penetrating Pays: The Pornhub Story</div><div class="bookmark-description">Currently at time of writing I&#x27;m ranked #1 finder of Bugs on https://hackerone.com/pornhub which is a nice position to hold. This post is to explain the techniques I&#x27;ve used to get to where I am and how I found my most recent $2500 bug on pornhub.</div></div><div class="bookmark-href"><img src="https://blog.zsec.uk/favicon.png" class="icon bookmark-icon"/>https://blog.zsec.uk/pwning-pornhub/</div></div><img src="https://images.unsplash.com/photo-1528821099448-43ccebfbb899?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;cs=tinysrgb&amp;w=1080&amp;fit=max&amp;ixid=eyJhcHBfaWQiOjExNzczfQ&amp;s=9c5e8f6e7d578b06e86c66d9243175ea" class="bookmark-image"/></a></figure><p id="c3b8145b-7bce-4a46-89cc-443e3d4d8b79" class="">
</p><figure id="5cb44e43-5cd3-42ba-a65e-f6cfe064edc8"><a href="https://hackerone.com/reports/128088/" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: AWS S3 bucket writeable for...</div><div class="bookmark-description">An ACL misconfiguration issue existed on one of our S3 buckets. This misconfiguration allowed any authenticated AWS user to write to this bucket (no read access was permitted). An attacker could theoretically post a file into that bucket that may at some point be accessed by a HackerOne staff member, thinking it&#x27;s been uploaded by another staff member or some automated system.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/128088/</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="d9fc2a52-007a-4ffc-a334-bf0ab4914759"><a href="https://blog.it-securityguard.com/bugbounty-yahoo-phpinfo-php-disclosure-2/" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">[BugBounty] Yahoo phpinfo.php disclosure</div><div class="bookmark-description">Dear readers, during my research of yahoo i found a phpinfo.php file information disclosure vulnerability, on one of their servers. The server on which i found that particular file was : http://nc10.n9323.mail.ne1.yahoo.com/phpinfo.php you might ask yourself how on earth i found this server.</div></div><div class="bookmark-href"><img src="https://blog.it-securityguard.com/favicon.ico" class="icon bookmark-icon"/>https://blog.it-securityguard.com/bugbounty-yahoo-phpinfo-php-disclosure-2/</div></div><img src="https://blog.it-securityguard.com/wp-content/uploads/2015/11/logo.png" class="bookmark-image"/></a></figure><figure id="bb45a58b-ab00-4875-96bd-7d5302209a1f"><a href="https://hackerone.com/reports/137503/" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: Inadequate access controls in...</div><div class="bookmark-description">Hello there, First of all let me congratulate you for including pornhub in the list of bug bounty programs, me and my colleagues will have a lot of fun with it hahahahahah. Awesome... Anyways, I stumbled upon something whilst testing hackerone&#x27;s main site.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/137503/</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="fb708713-aab3-4cdc-b8dc-ccbb01e79498"><a href="https://hackerone.com/reports/128085/" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">GitLab disclosed on HackerOne: Bypassing password authentication of...</div><div class="bookmark-description">This vulnerability allowed password authentication to be bypassed when two-factor authentication was enabled for a user. @GitLab resolved this 2 days after I reported it to them. The commit that fixed the bug can be found at https://gitlab.com/gitlab-org/gitlab-ce/commit/00da609cfd8bf1105fe433dfc92ab263d6205eaf. The bug has been fixed in GitLab version 8.6.5.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/128085/</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/264/8dd359f496ba6c5b97c5126dc86924a00fd7ef26_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="500f4fc8-8b71-4934-9e73-6becd4aeed94" class="">
</p><figure id="1156367f-4530-4569-bb74-9cc42d507636"><a href="https://hackerone.com/reports/100938/" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Shopify disclosed on HackerOne: An administrator without any...</div><div class="bookmark-description">Description** ---- An administrator who lacks the &#x27;Settings&#x27; permission is not able to add notifications through the UI. But the endpoint `shop.myshopify.com/admin/mobile_devices.json` does allow the unprivileged user to add his own device. **PoC** ---- This PoC simply show how to get &amp; re-use the mobile APNS Token. .</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/100938/</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="a8b38f83-654f-4167-8d94-dbd6423b216e"><a href="https://hackerone.com/reports/106305" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: Improve signals in reputation</div><div class="bookmark-description">New section has been added recently in reputation where you can see something called as signal , which says average reputation per report. However, you can improve your signal points by following below steps Steps: create any report in any team self close the bug see your signal in reputation.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/106305</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="a6c0bcb7-8b90-4fa9-8d10-2e77949ea52b" class=""><mark class="highlight-orange">IDOR</mark></h1><figure id="742cbf7d-1f10-43c2-bb4e-8dc48b70c714"><a href="https://medium.com/@corneacristian/top-25-idor-bug-bounty-reports-ba8cd59ad331" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Top 25 IDOR Bug Bounty Reports</div><div class="bookmark-description">In this article, we will discuss IDOR vulnerability, how to find one and present 25 disclosed reports based on this issue. IDOR stands for Insecure Direct Object Reference and it is a vulnerability in which an attacker can access sensitive information by making unauthorized references.</div></div><div class="bookmark-href"><img src="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="icon bookmark-icon"/>https://medium.com/@corneacristian/top-25-idor-bug-bounty-reports-ba8cd59ad331</div></div><img src="https://miro.medium.com/max/833/1*GxtT2xblK5V0NIaXj0vsOg.png" class="bookmark-image"/></a></figure><figure id="43747189-0093-4537-b21c-baa9896a77e9"><a href="https://medium.com/@0xgaurang/case-study-bypassing-idor-via-parameter-pollution-78f7b3f9f59d" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">[Case Study] Bypassing IDOR via Parameter Pollution</div><div class="bookmark-description">While working on a pentest engagement, I found an interesting IDOR (Insecure Direct Object Reference) bypass using parameter pollution (a much overlooked test case). I was looking out for the IDOR vulnerabilities within the REST-API of the target application. Unfortunately, none of the endpoints were found to be vulnerable to the traditional IDOR.</div></div><div class="bookmark-href"><img src="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="icon bookmark-icon"/>https://medium.com/@0xgaurang/case-study-bypassing-idor-via-parameter-pollution-78f7b3f9f59d</div></div><img src="https://miro.medium.com/max/1200/1*HTa63wLh1g0_LH3whLcU6w.png" class="bookmark-image"/></a></figure><p id="604b0a1c-bd17-4cff-85b1-7e6746a0bb48" class="">
</p><p id="52abaed5-2acf-4869-a45c-2cb264a77be5" class="">
</p><h1 id="c8eeebc2-8a21-4890-a4b1-2a8d47e024df" class="">Session Fixation</h1><figure id="cba53c2f-39aa-4316-885b-965adcc9c66b"><a href="https://hackerone.com/reports/135797" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Enter disclosed on HackerOne: Session Fixation</div><div class="bookmark-description">Summary ------------- Your login flow is vulnerable to session fixation. This can allow an attacker to steal a valid user session from a victim. Steps to reproduce -------------- 1. As the attacker go to https://wallet.sandbox.romit.io (but do not login!) and check the cookies `romit.sandbox.session` and `SANDBOX-XSRF-TOKEN`, that are set.</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/135797</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/563/c57c2cff9d127ea563dabf763e1d340bada8dcb2_original.jpg/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="a965bce3-c117-417b-b6e7-6b012ef12e78"><a href="https://hackerone.com/reports/423136" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Shopify disclosed on HackerOne: H1514 Session Fixation on multiple...</div><div class="bookmark-description">Note: This report was submitted during our [H1-514 live hacking event](https://www.hackerone.com/blog/Shopify-Awards-116000-Hackers-Canada-h1-514-Recap), which had an expanded scope compared to our public bug bounty program. Some of the apps mentioned in this report are not currently in scope for our public program.* @filedescriptor noticed that several add-on applications built by Shopify...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/423136</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h1 id="ee6a6dc6-5f31-4b4a-a1b3-2d6159fc4993" class=""><mark class="highlight-orange">GraphQL</mark></h1><figure id="1ee68ad3-3182-4229-9075-a712107c3e33"><a href="https://hackerone.com/reports/419883" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Shopify disclosed on HackerOne: H1514 [beerify.shopifycloud.com]...</div><div class="bookmark-description">Note: This report was submitted during our H1-514 live hacking event, which had an expanded scope compared to our public bug bounty program. The app mentioned in this report is not currently in scope for our public program.*</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/419883</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="81030d08-78ca-41f7-be2a-c6682d05a396" class="">
</p><figure id="54ba4715-ba5d-4b36-a9f9-b8f32beb4949"><a href="https://hackerone.com/reports/489146" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: Confidential data of users and...</div><div class="bookmark-description">On January 31st, 2019 at 7:16pm PST, HackerOne confirmed that two reporters were able to query confidential data through a GraphQL endpoint. This vulnerability was introduced on December 17th, 2018 and was caused by a backend migration to a class-based implementation of GraphQL types, mutations, and connections. The [class-based implementation...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/489146</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><p id="ea1fe46b-5a4d-4de9-8ceb-50032a9812d7" class="">
</p><figure id="38841111-eeeb-4db5-91af-aa3a8cc3fa2f"><a href="https://hackerone.com/reports/645299" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">HackerOne disclosed on HackerOne: Private information exposed...</div><div class="bookmark-description">Summary:** secure schema can be circumvented for graphql `where` filters by using `or` operator. **Description:** When passing a where clause to a collection in the `graphql` endpoint, like `teams(where:{ state: {_eq: soft_launched}})` it queries the state through the secure schema - so it will not return any teams where the state does equal soft_launched but you&#x27;re not allowed to see the...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/645299</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="961c9e74-74fa-46ab-a926-f3bd2f8a237a"><a href="https://medium.com/@localh0t/discovering-graphql-endpoints-and-sqli-vulnerabilities-5d39f26cea2e" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Discovering GraphQL endpoints and SQLi vulnerabilities</div><div class="bookmark-description">GraphQL is an open source data query language ( DQL) and data manipulation language ( DML). Initially, GraphQL was developed by Facebook around 2012 and publicly released in 2015. One if its main advantages is providing a more efficient and powerful alternative to other web-services architectures (like REST).</div></div><div class="bookmark-href"><img src="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="icon bookmark-icon"/>https://medium.com/@localh0t/discovering-graphql-endpoints-and-sqli-vulnerabilities-5d39f26cea2e</div></div><img src="https://miro.medium.com/max/1000/1*55Tp4JdXkjmDk06cofn6qg.png" class="bookmark-image"/></a></figure><h2 id="bc78b234-7880-40bd-a8e1-c9985111af6b" class="">Tool</h2><p id="eeb4ab6d-beeb-4ee0-ab4a-2d3869e59858" class="">inql</p><figure id="c6c5f69f-13b9-4db6-94f3-bb87dcebf82b"><a href="https://github.com/doyensec/inql" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">doyensec/inql</div><div class="bookmark-description">A security testing tool to facilitate GraphQL technology security auditing efforts. InQL can be used as a stand-alone script or as a Burp Suite extension.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/doyensec/inql</div></div><img src="https://repository-images.githubusercontent.com/130329493/81d2f780-c2d9-11ea-8feb-dbf4a9e80486" class="bookmark-image"/></a></figure><p id="2a482fed-e955-434a-ba81-0cc7f3c5449a" class="">
[!] Remote GraphQL Endpoint OR a Schema file in JSON format must be specified!</p><p id="3723374b-1114-4fd9-8853-c464ec355811" class="">
</p><p id="140828ad-0056-48ef-adf2-82cd804ab6b2" class="">
</p><h1 id="b98fd4f1-f43f-4108-82a0-1a728f3c3d66" class=""><mark class="highlight-blue">CRLF</mark></h1><figure id="565e1c04-50fe-4c12-891d-60d7388e19fd"><a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=&amp;ved=2ahUKEwihyITTl8HrAhVBKBoKHVh3D8QQFjAAegQIBRAB&amp;url=https%3A%2F%2Fhackerone.com%2Freports%2F446271&amp;usg=AOvVaw3C7xnZtbkmXvXmZ3v3zmNw" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Twitter disclosed on HackerOne: CRLF injection</div><div class="bookmark-description">https://ads.twitter.com was vulnerability to HTTP response splitting in the endpoint https://ads.twitter.com/subscriptions/mobile/landing that allows to an attacker add a malicious header in the response headers. PoC: https://ads.twitter.com/subscriptions/mobile/landing?t=%0d%0aSet-Cookie:%20csrf_id=injection%3b</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=&amp;ved=2ahUKEwihyITTl8HrAhVBKBoKHVh3D8QQFjAAegQIBRAB&amp;url=https%3A%2F%2Fhackerone.com%2Freports%2F446271&amp;usg=AOvVaw3C7xnZtbkmXvXmZ3v3zmNw</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/061/85a63a443f017ad8353de4f68ebf52fdd61c345a_original./cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="fa1acb56-6620-48f7-821c-70ebe0f1419b"><a href="https://hackerone.com/reports/237357" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Snapchat disclosed on HackerOne: CRLF Injection at vpn.bitstrips.com</div><div class="bookmark-description">HI I found that the site https://vpn.bitstrips.com/ is vulnerable to a CRLF Injection. By injecting a Carriage Return and Line Feed character, we are able to make the server issue a set-cookie header. GET Request : ``` https://vpn.bitstrips.com/__session_start__/%0aSet-Cookie:malicious_cookie1 Host: vpn.bitstrips.com User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0)...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/237357</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/513/87067c5c4ed63c2c07a522ca3198d2310e2a14c6_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><figure id="b43e4500-07fa-46a3-ac27-85cca197c214"><a href="https://hackerone.com/reports/332708" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">Mail.ru disclosed on HackerOne: [dl.beepcar.ru] CRLF Injection</div><div class="bookmark-description">CRLF Injection via Get request PoC: ``` https://dl.beepcar.ru/qwerty%0ASet-Cookie:%20test=qwerty;domain=.beepcar.ru ``` HTTP Response: ``` HTTP/1.1 302 Moved Temporarily Server: nginx/1.12.2 Date: Tue, 03 Apr 2018 19:20:31 GMT Content-Type: text/html Content-Length: 161 Connection: close Location: https://beepcar.ru/qwerty Set-Cookie: test=qwerty;domain=.beepcar.ru 302...</div></div><div class="bookmark-href"><img src="https://hackerone.com/favicon.ico" class="icon bookmark-icon"/>https://hackerone.com/reports/332708</div></div><img src="https://profile-photos.hackerone-user-content.com/variants/000/000/065/1ec04a6b87b02422d913b5c53d5247de91d64718_original.png/cf1e4b5d44005cb61fab358dd6968415f20545de5f055ba4ed33ca4387948cdc" class="bookmark-image"/></a></figure><h2 id="5e3bf457-b5ce-4571-a4af-b383c0f4f452" class="">Tool </h2><p id="93c54ebd-f9c2-400c-bd64-18c3c344ef15" class="">Use BRUP</p><p id="5f0a1cb8-bf08-4606-9ba7-57d11f7171dd" class="">
</p><p id="0cfd471e-7e9e-49c5-88af-374ef3975365" class="">
</p><h2 id="a7ae8219-65ae-4af2-93fd-cd3088f2c08d" class="">crlf scanner</h2><figure id="3b0eef26-1bdc-4d08-a9f4-6da5bf86c642"><a href="https://github.com/rudSarkar/crlf-injector" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">rudSarkar/crlf-injector</div><div class="bookmark-description">CRLF - Auto CRLF Injector Author: Rudra Sarkar Disclaimer: I am not responsible for any damage done using this tool. This tool should only be used for educational purposes and for penetration testing. Any platform using Python 2.7 Python 2.7 Modules: requests $ pip install requests $ python crlf.py Use $ python crlf.py [domain_list.ext] [crlf_payload] e.g $ python crlf.py mail.ru.list /%0aevil-here:malicious_cookie1 Regards!</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/rudSarkar/crlf-injector</div></div><img src="https://avatars1.githubusercontent.com/u/20747656?s=400&amp;v=4" class="bookmark-image"/></a></figure><figure id="45d469d9-a738-4904-aa21-2ad1a1c2fdca"><a href="https://github.com/MichaelStott/CRLF-Injection-Scanner" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">MichaelStott/CRLF-Injection-Scanner</div><div class="bookmark-description">Command line tool for testing CRLF injection on a list of domains. GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together. Command line tool for testing CRLF injection on a list of domains.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/MichaelStott/CRLF-Injection-Scanner</div></div><img src="https://avatars0.githubusercontent.com/u/25011500?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="e70e1f5c-63c6-4980-aa86-7a4d111700bb" class="">
</p><figure id="9194124b-7c0c-44cd-bd05-859fbeee485d"><a href="https://github.com/dwisiswant0/crlfuzz" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">dwisiswant0/crlfuzz</div><div class="bookmark-description">A fast tool to scan CRLF vulnerability written in Go The installation is easy. You can download a prebuilt binary from releases page, unpack and run! or with ▶ curl -sSfL dw1.io/crlfuzz.sh | sh -s -- -b /usr/local/bin If you have go1.13+ compiler installed and configured: ▶ GO111MODULE=on go get -v dw1.io/crlfuzz/cmd/crlfuzz In order to update the tool, you can use -u flag with go get command.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/dwisiswant0/crlfuzz</div></div><img src="https://repository-images.githubusercontent.com/287130193/28f0f600-dd94-11ea-8131-d277807a2fa8" class="bookmark-image"/></a></figure><h1 id="6d6b8f6c-818c-4746-9fd6-58008fba52b3" class="">Command Injection</h1><figure id="1fba9ec6-7324-408d-9401-d16ff864a06b"><a href="https://medium.com/@musyokaian/os-command-injection-vulnerability-22cc70e0e6a6" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">OS Command Injection Vulnerability</div><div class="bookmark-description">What is OS command Injection Vulnerability ? This is a type of vulnerability that allows an attacker to execute arbitrary command on the target system and what make this attack really interesting is that it requires very little knowledge for anyone to exploit.</div></div><div class="bookmark-href"><img src="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="icon bookmark-icon"/>https://medium.com/@musyokaian/os-command-injection-vulnerability-22cc70e0e6a6</div></div><img src="https://miro.medium.com/max/1200/0*ozfm71dZYrq_nMeG.png" class="bookmark-image"/></a></figure><p id="380aecdf-444a-4e76-87d0-c5b832feb64c" class="">
</p><figure id="64db2f8d-943d-4cc7-a54a-f43114ed6774"><a href="https://medium.com/bugbountywriteup/when-i-found-multiple-command-injection-ad891d3ad9e6" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">When i found multiple command injection</div><div class="bookmark-description">I found a command injection by capturing a DNS A request, which occurs when input data is interpreted as an operating system command. This is a highly critical issue and should be addressed as soon as possible.</div></div><div class="bookmark-href"><img src="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="icon bookmark-icon"/>https://medium.com/bugbountywriteup/when-i-found-multiple-command-injection-ad891d3ad9e6</div></div><img src="https://miro.medium.com/max/1200/1*o5EBzwL0454HKZbhzt0aBA.png" class="bookmark-image"/></a></figure><figure id="bf5a8ec8-7715-498d-b421-627a000930aa"><a href="https://medium.com/bugbountywriteup/command-injection-poc-72cc3743f10d" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">https://medium.com/bugbountywriteup/command-injection-poc-72cc3743f10d</div></div><div class="bookmark-href">https://medium.com/bugbountywriteup/command-injection-poc-72cc3743f10d</div></div></a></figure><p id="bef1c385-bd2c-4bbd-a1dd-f1dac0a76987" class="">command injection are as
follows:
Cookies
X-Forwarded-For
User-Agent
Referrer</p><p id="d1c0a5b4-d8c4-4a8c-9827-3328da1d9613" class="">
</p><p id="35a6e0af-1ccf-44c3-a0ca-960b88b69648" class="">Tool</p><figure id="6092f0d8-b2f3-40eb-8b13-4145f4a373b6"><a href="https://github.com/commixproject/commix" class="bookmark source"><div class="bookmark-info"><div class="bookmark-text"><div class="bookmark-title">commixproject/commix</div><div class="bookmark-description">Commix (short for [ comm]and [ i]njection e[ x]ploiter) is an automated tool written by Anastasios Stasinopoulos () that can be used from web developers, penetration testers or even security researchers in order to test web-based applications with the view to find bugs, errors or vulnerabilities related to command injection attacks.</div></div><div class="bookmark-href"><img src="https://github.com/favicon.ico" class="icon bookmark-icon"/>https://github.com/commixproject/commix</div></div><img src="https://avatars0.githubusercontent.com/u/22997896?s=400&amp;v=4" class="bookmark-image"/></a></figure><p id="d06a061c-f4ec-4a4d-aa92-a102e6101d89" class="">
</p></div></article></body></html>
